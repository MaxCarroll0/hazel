# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun playlist, action ->
  case action
  | PlaySong(id) => let songs = get_songs(playlist) in if List.exists(fun song -> song == id, songs) then (songs, Playing(id)) else playlist
  | PauseCurrentSong => let songs = get_songs(playlist) in (songs, PausedOn(get_current_song(playlist)))
  | RemoveSong(id) => let songs = get_songs(playlist) in if List.exists(fun song -> song == id, songs) then (List.filter(fun song -> song != id, songs), get_state(playlist)) else playlist
  | AddSong(id) => let songs = get_songs(playlist) in (id::songs, get_state(playlist))
  end

in