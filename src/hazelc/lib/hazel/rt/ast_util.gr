import WasmI32 from "runtime/unsafe/wasmi32"

import Ast from "./ast"
import Exception from "exception"

exception HazelTypeError

export enum Hazel {
  Number(Number),
  Const(Bool),
  Indet(Ast.Ast),
}


export let astToHazel = (arr : Ast.Ast) => {
    Indet(arr)
}

export let hazelToAst = (x : Hazel) => {
    match(x) {
        Indet(arr) => arr,
        _ => throw HazelTypeError,
    }
}

export let boolToHazel = (b : Bool) => {
    Const(b)
}

export let hazelToBool = (x : Hazel) => {
    match(x) {
        Const(b) => b,
        _ => throw HazelTypeError,
    }
}

export let numberToHazel = (x : Number) => {
    Number(x)
}

export let hazelToNumber = (x : Hazel) => {
    match(x) {
        Number(n) => n,
        _ => throw HazelTypeError,
    }
}

export let isIndet = (x : Hazel) => {
    match(x) {
        Indet(_) => true,
        _ => false
    }
}

export let isConst = (x : Hazel) => {
    match(x) {
        Const(_) => true,
        _ => false, 
    }
}

export let isNumber = (x : Hazel) => {
    match(x) {
        Number(_) => true,
        _ => false, 
    }
}
