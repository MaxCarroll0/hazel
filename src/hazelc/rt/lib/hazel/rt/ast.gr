import Map from "map"

export type Var = String
export type VarMap<v> = Map.Map<Var, v>

export type MetaVar = Int32
export type MetaVarInst = Int32

export enum HoleReason {
  TypeInconsistent,
  WrongLength,
}

export enum HTyp {
  Hole,
  Int,
  Float,
  Bool,
  Arrow(HTyp, HTyp),
  Sum(HTyp, HTyp),
  Prod(List<HTyp>),
  List(HTyp),
}

export enum BinBoolOp {
  And,
  Or,
}

export enum BinIntOp {
  Minus,
  Plus,
  Times,
  Divide,
  LessThan,
  GreaterThan,
  Equals,
}

export enum BinFloatOp {
  FPlus,
  FMinus,
  FTimes,
  FDivide,
  FLessThan,
  FGreaterThan,
  FEquals,
}

export enum Ast {
  EmptyHole(MetaVar, MetaVarInst, VarMap<Ast>),
  NonEmptyHole(HoleReason, MetaVar, MetaVarInst, VarMap<Ast>, Ast),
  Cast(Ast, HTyp, HTyp),
  FailedCast(Ast, HTyp, HTyp),
  Ap(Ast, Ast),
  BoolLit(Bool),
  IntLit(Int32),
  FloatLit(Float32),
  BinBoolOp(BinBoolOp, Ast, Ast),
  BinIntOp(BinIntOp, Ast, Ast),
  BinFloatOp(BinFloatOp, Ast, Ast),
}
