(include_subdirs unqualified)

(alias
 (name default)
 (deps
  (source_tree www)))

(library
 (name workerServer)
 (modules WorkerServer)
 (libraries
  str
  incr_dom
  virtual_dom.input_widgets
  util
  ppx_yojson_conv.expander
  haz3lcore
  haz3lschool
  pretty
  omd)
 (js_of_ocaml
  (flags
   (:include js-of-ocaml-flags-%{profile})))
 (preprocess
  (pps
   ppx_yojson_conv
   js_of_ocaml-ppx
   ppx_let
   ppx_sexp_conv
   ppx_deriving.show)))

(library
 (name haz3lweb)
 (modules
  (:standard \ Main)
  \
  Worker
  WorkerServer)
 (libraries
  ezjs_min
  ezjs_idb
  workerServer
  str
  incr_dom
  virtual_dom.input_widgets
  util
  ppx_yojson_conv.expander
  haz3lcore
  haz3lschool
  pretty
  omd)
 (js_of_ocaml
  (flags
   (:include js-of-ocaml-flags-%{profile})))
 (preprocess
  (pps
   ppx_yojson_conv
   js_of_ocaml-ppx
   ppx_let
   ppx_sexp_conv
   ppx_deriving.show)))

(executable
 (name main)
 (modules Main)
 (libraries ppx_yojson_conv.expander haz3lweb)
 (modes js)
 (js_of_ocaml
  (flags
   (:include js-of-ocaml-flags-%{profile})))
 (preprocess
  (pps
   ppx_yojson_conv
   js_of_ocaml-ppx
   ppx_let
   ppx_sexp_conv
   ppx_deriving.show)))

(executable
 (name worker)
 (modules Worker)
 (libraries workerServer)
 (modes js)
 (preprocess
  (pps js_of_ocaml-ppx)))

(env
 (dev
  (js_of_ocaml
   (flags (:standard))))
 (release
  (js_of_ocaml
   (flags (:standard)))))

(rule
 (write-file js-of-ocaml-flags-dev "(:standard)"))

(rule
 (write-file js-of-ocaml-flags-release "(:standard)"))
