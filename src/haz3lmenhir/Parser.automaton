State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On program shift to state 236
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 237
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 1:
## Known stack suffix:
## WILD
## LR(1) items:
exp -> WILD . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> WILD

State 2:
## Known stack suffix:
## UNDEF
## LR(1) items:
exp -> UNDEF . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> UNDEF

State 3:
## Known stack suffix:
## TYP_FUN
## LR(1) items:
exp -> TYP_FUN . tpat DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On QUESTION shift to state 4
-- On IDENT shift to state 6
-- On tpat shift to state 7
## Reductions:

State 4:
## Known stack suffix:
## QUESTION
## LR(1) items:
tpat -> QUESTION . STRING [ SINGLE_EQUAL DASH_ARROW ]
tpat -> QUESTION . [ SINGLE_EQUAL DASH_ARROW ]
## Transitions:
-- On STRING shift to state 5
## Reductions:
-- On SINGLE_EQUAL DASH_ARROW
--   reduce production tpat -> QUESTION

State 5:
## Known stack suffix:
## QUESTION STRING
## LR(1) items:
tpat -> QUESTION STRING . [ SINGLE_EQUAL DASH_ARROW ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL DASH_ARROW
--   reduce production tpat -> QUESTION STRING

State 6:
## Known stack suffix:
## IDENT
## LR(1) items:
tpat -> IDENT . [ SINGLE_EQUAL DASH_ARROW ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL DASH_ARROW
--   reduce production tpat -> IDENT

State 7:
## Known stack suffix:
## TYP_FUN tpat
## LR(1) items:
exp -> TYP_FUN tpat . DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On DASH_ARROW shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## TYP_FUN tpat DASH_ARROW
## LR(1) items:
exp -> TYP_FUN tpat DASH_ARROW . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 235
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 9:
## Known stack suffix:
## TYP
## LR(1) items:
exp -> TYP . tpat SINGLE_EQUAL typ IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On QUESTION shift to state 4
-- On IDENT shift to state 6
-- On tpat shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## TYP tpat
## LR(1) items:
exp -> TYP tpat . SINGLE_EQUAL typ IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SINGLE_EQUAL shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## TYP tpat SINGLE_EQUAL
## LR(1) items:
exp -> TYP tpat SINGLE_EQUAL . typ IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 33
## Reductions:

State 12:
## Known stack suffix:
## UNKNOWN
## LR(1) items:
typ -> UNKNOWN . INTERNAL [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On INTERNAL shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## UNKNOWN INTERNAL
## LR(1) items:
typ -> UNKNOWN INTERNAL . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> UNKNOWN INTERNAL

State 14:
## Known stack suffix:
## UNIT
## LR(1) items:
typ -> UNIT . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> UNIT

State 15:
## Known stack suffix:
## STRING_TYPE
## LR(1) items:
typ -> STRING_TYPE . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> STRING_TYPE

State 16:
## Known stack suffix:
## QUESTION
## LR(1) items:
typ -> QUESTION . STRING [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On STRING shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## QUESTION STRING
## LR(1) items:
typ -> QUESTION STRING . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> QUESTION STRING

State 18:
## Known stack suffix:
## OPEN_SQUARE_BRACKET
## LR(1) items:
typ -> OPEN_SQUARE_BRACKET . typ CLOSE_SQUARE_BRACKET [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 31
## Reductions:

State 19:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
typ -> OPEN_PAREN . loption(separated_nonempty_list(COMMA,typ)) CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 23
-- On separated_nonempty_list(COMMA,typ) shift to state 28
-- On loption(separated_nonempty_list(COMMA,typ)) shift to state 29
## Reductions:
-- On CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,typ)) ->

State 20:
## Known stack suffix:
## INT_TYPE
## LR(1) items:
typ -> INT_TYPE . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> INT_TYPE

State 21:
## Known stack suffix:
## FLOAT_TYPE
## LR(1) items:
typ -> FLOAT_TYPE . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> FLOAT_TYPE

State 22:
## Known stack suffix:
## BOOL_TYPE
## LR(1) items:
typ -> BOOL_TYPE . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> BOOL_TYPE

State 23:
## Known stack suffix:
## typ
## LR(1) items:
separated_nonempty_list(COMMA,typ) -> typ . [ CLOSE_PAREN ]
separated_nonempty_list(COMMA,typ) -> typ . COMMA separated_nonempty_list(COMMA,typ) [ CLOSE_PAREN ]
typ -> typ . DASH_ARROW typ [ DASH_ARROW COMMA CLOSE_PAREN ]
## Transitions:
-- On DASH_ARROW shift to state 24
-- On COMMA shift to state 26
## Reductions:
-- On CLOSE_PAREN
--   reduce production separated_nonempty_list(COMMA,typ) -> typ

State 24:
## Known stack suffix:
## typ DASH_ARROW
## LR(1) items:
typ -> typ DASH_ARROW . typ [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## typ DASH_ARROW typ
## LR(1) items:
typ -> typ . DASH_ARROW typ [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ DASH_ARROW typ . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> typ DASH_ARROW typ

State 26:
## Known stack suffix:
## typ COMMA
## LR(1) items:
separated_nonempty_list(COMMA,typ) -> typ COMMA . separated_nonempty_list(COMMA,typ) [ CLOSE_PAREN ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 23
-- On separated_nonempty_list(COMMA,typ) shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## typ COMMA separated_nonempty_list(COMMA,typ)
## LR(1) items:
separated_nonempty_list(COMMA,typ) -> typ COMMA separated_nonempty_list(COMMA,typ) . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production separated_nonempty_list(COMMA,typ) -> typ COMMA separated_nonempty_list(COMMA,typ)

State 28:
## Known stack suffix:
## separated_nonempty_list(COMMA,typ)
## LR(1) items:
loption(separated_nonempty_list(COMMA,typ)) -> separated_nonempty_list(COMMA,typ) . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,typ)) -> separated_nonempty_list(COMMA,typ)

State 29:
## Known stack suffix:
## OPEN_PAREN loption(separated_nonempty_list(COMMA,typ))
## LR(1) items:
typ -> OPEN_PAREN loption(separated_nonempty_list(COMMA,typ)) . CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On CLOSE_PAREN shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## OPEN_PAREN loption(separated_nonempty_list(COMMA,typ)) CLOSE_PAREN
## LR(1) items:
typ -> OPEN_PAREN loption(separated_nonempty_list(COMMA,typ)) CLOSE_PAREN . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> OPEN_PAREN loption(separated_nonempty_list(COMMA,typ)) CLOSE_PAREN

State 31:
## Known stack suffix:
## OPEN_SQUARE_BRACKET typ
## LR(1) items:
typ -> OPEN_SQUARE_BRACKET typ . CLOSE_SQUARE_BRACKET [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ DASH_ARROW CLOSE_SQUARE_BRACKET ]
## Transitions:
-- On DASH_ARROW shift to state 24
-- On CLOSE_SQUARE_BRACKET shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## OPEN_SQUARE_BRACKET typ CLOSE_SQUARE_BRACKET
## LR(1) items:
typ -> OPEN_SQUARE_BRACKET typ CLOSE_SQUARE_BRACKET . [ TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SINGLE_EQUAL SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EQUAL_ARROW EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production typ -> OPEN_SQUARE_BRACKET typ CLOSE_SQUARE_BRACKET

State 33:
## Known stack suffix:
## TYP tpat SINGLE_EQUAL typ
## LR(1) items:
exp -> TYP tpat SINGLE_EQUAL typ . IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ IN DASH_ARROW ]
## Transitions:
-- On IN shift to state 34
-- On DASH_ARROW shift to state 24
## Reductions:

State 34:
## Known stack suffix:
## TYP tpat SINGLE_EQUAL typ IN
## LR(1) items:
exp -> TYP tpat SINGLE_EQUAL typ IN . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 234
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 35:
## Known stack suffix:
## TRUE
## LR(1) items:
exp -> TRUE . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> TRUE

State 36:
## Known stack suffix:
## TEST
## LR(1) items:
exp -> TEST . exp END [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 232
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 37:
## Known stack suffix:
## STRING
## LR(1) items:
exp -> STRING . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> STRING

State 38:
## Known stack suffix:
## QUESTION
## LR(1) items:
exp -> QUESTION . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> QUESTION . STRING [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On STRING shift to state 39
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> QUESTION

State 39:
## Known stack suffix:
## QUESTION STRING
## LR(1) items:
exp -> QUESTION STRING . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> QUESTION STRING

State 40:
## Known stack suffix:
## PAUSE
## LR(1) items:
filterAction -> PAUSE . [ WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN ]
## Transitions:
## Reductions:
-- On WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN
--   reduce production filterAction -> PAUSE

State 41:
## Known stack suffix:
## OPEN_SQUARE_BRACKET
## LR(1) items:
exp -> OPEN_SQUARE_BRACKET . loption(separated_nonempty_list(COMMA,exp)) CLOSE_SQUARE_BRACKET [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On separated_nonempty_list(COMMA,exp) shift to state 187
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 194
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 190
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:
-- On CLOSE_SQUARE_BRACKET
--   reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 42:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
exp -> OPEN_PAREN . exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> OPEN_PAREN . exp COMMA loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 159
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 43:
## Known stack suffix:
## NAMED_FUN
## LR(1) items:
funExp -> NAMED_FUN . IDENT pat DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On IDENT shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## NAMED_FUN IDENT
## LR(1) items:
funExp -> NAMED_FUN IDENT . pat DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 82
## Reductions:

State 45:
## Known stack suffix:
## WILD
## LR(1) items:
pat -> WILD . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> WILD

State 46:
## Known stack suffix:
## TRUE
## LR(1) items:
pat -> TRUE . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> TRUE

State 47:
## Known stack suffix:
## STRING
## LR(1) items:
pat -> STRING . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> STRING

State 48:
## Known stack suffix:
## QUESTION
## LR(1) items:
pat -> QUESTION . STRING [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> QUESTION . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On STRING shift to state 49
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> QUESTION

State 49:
## Known stack suffix:
## QUESTION STRING
## LR(1) items:
pat -> QUESTION STRING . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> QUESTION STRING

State 50:
## Known stack suffix:
## OPEN_SQUARE_BRACKET
## LR(1) items:
pat -> OPEN_SQUARE_BRACKET . loption(separated_nonempty_list(COMMA,pat)) CLOSE_SQUARE_BRACKET [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On separated_nonempty_list(COMMA,pat) shift to state 73
-- On pat shift to state 74
-- On loption(separated_nonempty_list(COMMA,pat)) shift to state 80
## Reductions:
-- On CLOSE_SQUARE_BRACKET
--   reduce production loption(separated_nonempty_list(COMMA,pat)) ->

State 51:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
pat -> OPEN_PAREN . pat CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> OPEN_PAREN . pat COMMA loption(separated_nonempty_list(COMMA,pat)) CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 59
## Reductions:

State 52:
## Known stack suffix:
## INT
## LR(1) items:
pat -> INT . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> INT

State 53:
## Known stack suffix:
## IDENT
## LR(1) items:
pat -> IDENT . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> IDENT

State 54:
## Known stack suffix:
## FLOAT
## LR(1) items:
pat -> FLOAT . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> FLOAT

State 55:
## Known stack suffix:
## FALSE
## LR(1) items:
pat -> FALSE . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> FALSE

State 56:
## Known stack suffix:
## CONSTRUCTOR_IDENT
## LR(1) items:
pat -> CONSTRUCTOR_IDENT . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> CONSTRUCTOR_IDENT . TILDE typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On TILDE shift to state 57
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> CONSTRUCTOR_IDENT

State 57:
## Known stack suffix:
## CONSTRUCTOR_IDENT TILDE
## LR(1) items:
pat -> CONSTRUCTOR_IDENT TILDE . typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## CONSTRUCTOR_IDENT TILDE typ
## LR(1) items:
pat -> CONSTRUCTOR_IDENT TILDE typ . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
typ -> typ . DASH_ARROW typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> CONSTRUCTOR_IDENT TILDE typ

State 59:
## Known stack suffix:
## OPEN_PAREN pat
## LR(1) items:
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_PAREN ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_PAREN ]
pat -> OPEN_PAREN pat . CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> OPEN_PAREN pat . COMMA loption(separated_nonempty_list(COMMA,pat)) CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_PAREN ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On CONS shift to state 67
-- On COMMA shift to state 72
-- On COLON shift to state 69
-- On CLOSE_PAREN shift to state 79
## Reductions:

State 60:
## Known stack suffix:
## pat OPEN_PAREN
## LR(1) items:
pat -> pat OPEN_PAREN . pat CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## pat OPEN_PAREN pat
## LR(1) items:
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN CONS COLON CLOSE_PAREN ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN CONS COLON CLOSE_PAREN ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN CONS COLON CLOSE_PAREN ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN CONS COLON CLOSE_PAREN ]
pat -> pat OPEN_PAREN pat . CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On CONS shift to state 67
-- On COLON shift to state 69
-- On CLOSE_PAREN shift to state 71
## Reductions:

State 62:
## Known stack suffix:
## pat LESS_THAN
## LR(1) items:
pat -> pat LESS_THAN . typ EQUAL_ARROW typ GREATER_THAN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## pat LESS_THAN typ
## LR(1) items:
pat -> pat LESS_THAN typ . EQUAL_ARROW typ GREATER_THAN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
typ -> typ . DASH_ARROW typ [ EQUAL_ARROW DASH_ARROW ]
## Transitions:
-- On EQUAL_ARROW shift to state 64
-- On DASH_ARROW shift to state 24
## Reductions:

State 64:
## Known stack suffix:
## pat LESS_THAN typ EQUAL_ARROW
## LR(1) items:
pat -> pat LESS_THAN typ EQUAL_ARROW . typ GREATER_THAN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## pat LESS_THAN typ EQUAL_ARROW typ
## LR(1) items:
pat -> pat LESS_THAN typ EQUAL_ARROW typ . GREATER_THAN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
typ -> typ . DASH_ARROW typ [ GREATER_THAN DASH_ARROW ]
## Transitions:
-- On GREATER_THAN shift to state 66
-- On DASH_ARROW shift to state 24
## Reductions:

State 66:
## Known stack suffix:
## pat LESS_THAN typ EQUAL_ARROW typ GREATER_THAN
## LR(1) items:
pat -> pat LESS_THAN typ EQUAL_ARROW typ GREATER_THAN . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> pat LESS_THAN typ EQUAL_ARROW typ GREATER_THAN

State 67:
## Known stack suffix:
## pat CONS
## LR(1) items:
pat -> pat CONS . pat [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## pat CONS pat
## LR(1) items:
pat -> pat . COLON typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . CONS pat [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat CONS pat . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On COLON shift to state 69
## Reductions:
-- On SINGLE_EQUAL LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> pat CONS pat

State 69:
## Known stack suffix:
## pat COLON
## LR(1) items:
pat -> pat COLON . typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## pat COLON typ
## LR(1) items:
pat -> pat COLON typ . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
typ -> typ . DASH_ARROW typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> pat COLON typ

State 71:
## Known stack suffix:
## pat OPEN_PAREN pat CLOSE_PAREN
## LR(1) items:
pat -> pat OPEN_PAREN pat CLOSE_PAREN . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> pat OPEN_PAREN pat CLOSE_PAREN

State 72:
## Known stack suffix:
## OPEN_PAREN pat COMMA
## LR(1) items:
pat -> OPEN_PAREN pat COMMA . loption(separated_nonempty_list(COMMA,pat)) CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On separated_nonempty_list(COMMA,pat) shift to state 73
-- On pat shift to state 74
-- On loption(separated_nonempty_list(COMMA,pat)) shift to state 77
## Reductions:
-- On CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,pat)) ->

State 73:
## Known stack suffix:
## separated_nonempty_list(COMMA,pat)
## LR(1) items:
loption(separated_nonempty_list(COMMA,pat)) -> separated_nonempty_list(COMMA,pat) . [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,pat)) -> separated_nonempty_list(COMMA,pat)

State 74:
## Known stack suffix:
## pat
## LR(1) items:
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
separated_nonempty_list(COMMA,pat) -> pat . [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
separated_nonempty_list(COMMA,pat) -> pat . COMMA separated_nonempty_list(COMMA,pat) [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On CONS shift to state 67
-- On COMMA shift to state 75
-- On COLON shift to state 69
## Reductions:
-- On CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production separated_nonempty_list(COMMA,pat) -> pat

State 75:
## Known stack suffix:
## pat COMMA
## LR(1) items:
separated_nonempty_list(COMMA,pat) -> pat COMMA . separated_nonempty_list(COMMA,pat) [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On separated_nonempty_list(COMMA,pat) shift to state 76
-- On pat shift to state 74
## Reductions:

State 76:
## Known stack suffix:
## pat COMMA separated_nonempty_list(COMMA,pat)
## LR(1) items:
separated_nonempty_list(COMMA,pat) -> pat COMMA separated_nonempty_list(COMMA,pat) . [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production separated_nonempty_list(COMMA,pat) -> pat COMMA separated_nonempty_list(COMMA,pat)

State 77:
## Known stack suffix:
## OPEN_PAREN pat COMMA loption(separated_nonempty_list(COMMA,pat))
## LR(1) items:
pat -> OPEN_PAREN pat COMMA loption(separated_nonempty_list(COMMA,pat)) . CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## OPEN_PAREN pat COMMA loption(separated_nonempty_list(COMMA,pat)) CLOSE_PAREN
## LR(1) items:
pat -> OPEN_PAREN pat COMMA loption(separated_nonempty_list(COMMA,pat)) CLOSE_PAREN . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> OPEN_PAREN pat COMMA loption(separated_nonempty_list(COMMA,pat)) CLOSE_PAREN

State 79:
## Known stack suffix:
## OPEN_PAREN pat CLOSE_PAREN
## LR(1) items:
pat -> OPEN_PAREN pat CLOSE_PAREN . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> OPEN_PAREN pat CLOSE_PAREN

State 80:
## Known stack suffix:
## OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,pat))
## LR(1) items:
pat -> OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,pat)) . CLOSE_SQUARE_BRACKET [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On CLOSE_SQUARE_BRACKET shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,pat)) CLOSE_SQUARE_BRACKET
## LR(1) items:
pat -> OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,pat)) CLOSE_SQUARE_BRACKET . [ SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On SINGLE_EQUAL OPEN_PAREN LESS_THAN EQUAL_ARROW DASH_ARROW CONS COMMA COLON CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production pat -> OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,pat)) CLOSE_SQUARE_BRACKET

State 82:
## Known stack suffix:
## NAMED_FUN IDENT pat
## LR(1) items:
funExp -> NAMED_FUN IDENT pat . DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On DASH_ARROW shift to state 83
-- On CONS shift to state 67
-- On COLON shift to state 69
## Reductions:

State 83:
## Known stack suffix:
## NAMED_FUN IDENT pat DASH_ARROW
## LR(1) items:
funExp -> NAMED_FUN IDENT pat DASH_ARROW . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 231
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 84:
## Known stack suffix:
## MINUS
## LR(1) items:
unExp -> MINUS . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 230
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 85:
## Known stack suffix:
## L_NOT
## LR(1) items:
unExp -> L_NOT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 229
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 86:
## Known stack suffix:
## LET
## LR(1) items:
exp -> LET . pat SINGLE_EQUAL exp IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## LET pat
## LR(1) items:
exp -> LET pat . SINGLE_EQUAL exp IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
pat -> pat . COLON typ [ SINGLE_EQUAL OPEN_PAREN LESS_THAN CONS COLON ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN CONS COLON ]
pat -> pat . CONS pat [ SINGLE_EQUAL OPEN_PAREN LESS_THAN CONS COLON ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ SINGLE_EQUAL OPEN_PAREN LESS_THAN CONS COLON ]
## Transitions:
-- On SINGLE_EQUAL shift to state 88
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On CONS shift to state 67
-- On COLON shift to state 69
## Reductions:

State 88:
## Known stack suffix:
## LET pat SINGLE_EQUAL
## LR(1) items:
exp -> LET pat SINGLE_EQUAL . exp IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 226
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 89:
## Known stack suffix:
## LESS_THAN
## LR(1) items:
exp -> LESS_THAN . LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On LESS_THAN shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## LESS_THAN LESS_THAN
## LR(1) items:
exp -> LESS_THAN LESS_THAN . exp QUESTION SEXP_STRING GREATER_THAN GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 221
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 91:
## Known stack suffix:
## INT
## LR(1) items:
exp -> INT . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> INT

State 92:
## Known stack suffix:
## IF
## LR(1) items:
exp -> IF . exp THEN exp ELSE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 216
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 93:
## Known stack suffix:
## IDENT
## LR(1) items:
exp -> IDENT . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> IDENT

State 94:
## Known stack suffix:
## HIDE
## LR(1) items:
filterAction -> HIDE . [ WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN ]
## Transitions:
## Reductions:
-- On WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN
--   reduce production filterAction -> HIDE

State 95:
## Known stack suffix:
## FUN
## LR(1) items:
funExp -> FUN . pat DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## FUN pat
## LR(1) items:
funExp -> FUN pat . DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On DASH_ARROW shift to state 97
-- On CONS shift to state 67
-- On COLON shift to state 69
## Reductions:

State 97:
## Known stack suffix:
## FUN pat DASH_ARROW
## LR(1) items:
funExp -> FUN pat DASH_ARROW . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 215
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 98:
## Known stack suffix:
## FLOAT
## LR(1) items:
exp -> FLOAT . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> FLOAT

State 99:
## Known stack suffix:
## FIX
## LR(1) items:
exp -> FIX . pat DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## FIX pat
## LR(1) items:
exp -> FIX pat . DASH_ARROW exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN DASH_ARROW CONS COLON ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On DASH_ARROW shift to state 101
-- On CONS shift to state 67
-- On COLON shift to state 69
## Reductions:

State 101:
## Known stack suffix:
## FIX pat DASH_ARROW
## LR(1) items:
exp -> FIX pat DASH_ARROW . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 214
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 102:
## Known stack suffix:
## FALSE
## LR(1) items:
exp -> FALSE . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> FALSE

State 103:
## Known stack suffix:
## EVAL
## LR(1) items:
filterAction -> EVAL . [ WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN ]
## Transitions:
## Reductions:
-- On WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN
--   reduce production filterAction -> EVAL

State 104:
## Known stack suffix:
## DOLLAR_SIGN
## LR(1) items:
unExp -> DOLLAR_SIGN . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 213
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 105:
## Known stack suffix:
## DEBUG
## LR(1) items:
filterAction -> DEBUG . [ WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN ]
## Transitions:
## Reductions:
-- On WILD UNDEF TYP_FUN TYP TRUE TEST STRING QUESTION PAUSE OPEN_SQUARE_BRACKET OPEN_PAREN NAMED_FUN MINUS L_NOT LET LESS_THAN INT IF IDENT HIDE FUN FLOAT FIX FALSE EVAL DOLLAR_SIGN DEBUG CONSTRUCTOR_IDENT CASE BUILTIN
--   reduce production filterAction -> DEBUG

State 106:
## Known stack suffix:
## CONSTRUCTOR_IDENT
## LR(1) items:
exp -> CONSTRUCTOR_IDENT . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> CONSTRUCTOR_IDENT . TILDE typ [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TILDE shift to state 107
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> CONSTRUCTOR_IDENT

State 107:
## Known stack suffix:
## CONSTRUCTOR_IDENT TILDE
## LR(1) items:
exp -> CONSTRUCTOR_IDENT TILDE . typ [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 108
## Reductions:

State 108:
## Known stack suffix:
## CONSTRUCTOR_IDENT TILDE typ
## LR(1) items:
exp -> CONSTRUCTOR_IDENT TILDE typ . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE DASH_ARROW CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On DASH_ARROW shift to state 24
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> CONSTRUCTOR_IDENT TILDE typ

State 109:
## Known stack suffix:
## CASE
## LR(1) items:
case -> CASE . exp list(rul) END [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 204
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 110:
## Known stack suffix:
## BUILTIN
## LR(1) items:
exp -> BUILTIN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> BUILTIN

State 111:
## Known stack suffix:
## unExp
## LR(1) items:
exp -> unExp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> unExp

State 112:
## Known stack suffix:
## funExp
## LR(1) items:
exp -> funExp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> funExp

State 113:
## Known stack suffix:
## filterAction
## LR(1) items:
exp -> filterAction . exp IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 114
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 114:
## Known stack suffix:
## filterAction exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> filterAction exp . IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On IN shift to state 202
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 115:
## Known stack suffix:
## exp TIMES_FLOAT
## LR(1) items:
binExp -> exp TIMES_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 116
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 116:
## Known stack suffix:
## exp TIMES_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp TIMES_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp TIMES_FLOAT exp

State 117:
## Known stack suffix:
## exp SEMI_COLON
## LR(1) items:
exp -> exp SEMI_COLON . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 118
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 118:
## Known stack suffix:
## exp SEMI_COLON exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp SEMI_COLON exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On L_OR shift to state 119
-- On L_AND shift to state 123
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> exp SEMI_COLON exp

State 119:
## Known stack suffix:
## exp L_OR
## LR(1) items:
binExp -> exp L_OR . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 120
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 120:
## Known stack suffix:
## exp L_OR exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp L_OR exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production binExp -> exp L_OR exp

State 121:
## Known stack suffix:
## case
## LR(1) items:
exp -> case . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> case

State 122:
## Known stack suffix:
## binExp
## LR(1) items:
exp -> binExp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> binExp

State 123:
## Known stack suffix:
## exp L_AND
## LR(1) items:
binExp -> exp L_AND . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 124
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 124:
## Known stack suffix:
## exp L_AND exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp L_AND exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production binExp -> exp L_AND exp

State 125:
## Known stack suffix:
## exp QUESTION
## LR(1) items:
exp -> exp QUESTION . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On LESS_THAN shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## exp QUESTION LESS_THAN
## LR(1) items:
exp -> exp QUESTION LESS_THAN . typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## exp QUESTION LESS_THAN typ
## LR(1) items:
exp -> exp QUESTION LESS_THAN typ . EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ EQUAL_ARROW DASH_ARROW ]
## Transitions:
-- On EQUAL_ARROW shift to state 128
-- On DASH_ARROW shift to state 24
## Reductions:

State 128:
## Known stack suffix:
## exp QUESTION LESS_THAN typ EQUAL_ARROW
## LR(1) items:
exp -> exp QUESTION LESS_THAN typ EQUAL_ARROW . typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## exp QUESTION LESS_THAN typ EQUAL_ARROW typ
## LR(1) items:
exp -> exp QUESTION LESS_THAN typ EQUAL_ARROW typ . GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ GREATER_THAN DASH_ARROW ]
## Transitions:
-- On GREATER_THAN shift to state 130
-- On DASH_ARROW shift to state 24
## Reductions:

State 130:
## Known stack suffix:
## exp QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN
## LR(1) items:
exp -> exp QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> exp QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN

State 131:
## Known stack suffix:
## exp OPEN_PAREN
## LR(1) items:
exp -> exp OPEN_PAREN . exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 132
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 132:
## Known stack suffix:
## exp OPEN_PAREN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp OPEN_PAREN exp . CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On CLOSE_PAREN shift to state 201
-- On AT_SYMBOL shift to state 139
## Reductions:

State 133:
## Known stack suffix:
## exp TIMES
## LR(1) items:
binExp -> exp TIMES . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 134
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 134:
## Known stack suffix:
## exp TIMES exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp TIMES exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp TIMES exp

State 135:
## Known stack suffix:
## exp POWER_FLOAT
## LR(1) items:
binExp -> exp POWER_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 136
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 136:
## Known stack suffix:
## exp POWER_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp POWER_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp POWER_FLOAT exp

State 137:
## Known stack suffix:
## exp CONS
## LR(1) items:
exp -> exp CONS . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 138
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 138:
## Known stack suffix:
## exp CONS exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp CONS exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production exp -> exp CONS exp

State 139:
## Known stack suffix:
## exp AT_SYMBOL
## LR(1) items:
exp -> exp AT_SYMBOL . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp AT_SYMBOL . LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 140
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 143
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 140:
## Known stack suffix:
## exp AT_SYMBOL LESS_THAN
## LR(1) items:
exp -> exp AT_SYMBOL LESS_THAN . typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> LESS_THAN . LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On LESS_THAN shift to state 90
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## exp AT_SYMBOL LESS_THAN typ
## LR(1) items:
exp -> exp AT_SYMBOL LESS_THAN typ . GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ GREATER_THAN DASH_ARROW ]
## Transitions:
-- On GREATER_THAN shift to state 142
-- On DASH_ARROW shift to state 24
## Reductions:

State 142:
## Known stack suffix:
## exp AT_SYMBOL LESS_THAN typ GREATER_THAN
## LR(1) items:
exp -> exp AT_SYMBOL LESS_THAN typ GREATER_THAN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> exp AT_SYMBOL LESS_THAN typ GREATER_THAN

State 143:
## Known stack suffix:
## exp AT_SYMBOL exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp AT_SYMBOL exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On L_OR shift to state 119
-- On L_AND shift to state 123
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> exp AT_SYMBOL exp

State 144:
## Known stack suffix:
## exp PLUS_FLOAT
## LR(1) items:
binExp -> exp PLUS_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 145
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 145:
## Known stack suffix:
## exp PLUS_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp PLUS_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp PLUS_FLOAT exp

State 146:
## Known stack suffix:
## exp NOT_EQUAL_FLOAT
## LR(1) items:
binExp -> exp NOT_EQUAL_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 147
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 147:
## Known stack suffix:
## exp NOT_EQUAL_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp NOT_EQUAL_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp NOT_EQUAL_FLOAT exp

State 148:
## Known stack suffix:
## exp MINUS_FLOAT
## LR(1) items:
binExp -> exp MINUS_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 149
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 149:
## Known stack suffix:
## exp MINUS_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp MINUS_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp MINUS_FLOAT exp

State 150:
## Known stack suffix:
## exp LESS_THAN_FLOAT
## LR(1) items:
binExp -> exp LESS_THAN_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 151
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 151:
## Known stack suffix:
## exp LESS_THAN_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp LESS_THAN_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp LESS_THAN_FLOAT exp

State 152:
## Known stack suffix:
## exp LESS_THAN_EQUAL_FLOAT
## LR(1) items:
binExp -> exp LESS_THAN_EQUAL_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 153
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 153:
## Known stack suffix:
## exp LESS_THAN_EQUAL_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp LESS_THAN_EQUAL_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp LESS_THAN_EQUAL_FLOAT exp

State 154:
## Known stack suffix:
## exp LESS_THAN
## LR(1) items:
binExp -> exp LESS_THAN . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp LESS_THAN . typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING_TYPE shift to state 15
-- On STRING shift to state 37
-- On QUESTION shift to state 155
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 157
-- On OPEN_PAREN shift to state 158
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT_TYPE shift to state 20
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT_TYPE shift to state 21
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On BOOL_TYPE shift to state 22
-- On unExp shift to state 111
-- On typ shift to state 196
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 200
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 155:
## Known stack suffix:
## QUESTION
## LR(1) items:
exp -> QUESTION . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> QUESTION . STRING [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> QUESTION . STRING [ EQUAL_ARROW DASH_ARROW COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On STRING shift to state 156
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> QUESTION

State 156:
## Known stack suffix:
## QUESTION STRING
## LR(1) items:
exp -> QUESTION STRING . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> QUESTION STRING . [ EQUAL_ARROW DASH_ARROW COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> QUESTION STRING
-- On EQUAL_ARROW DASH_ARROW COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production typ -> QUESTION STRING
** Conflict on COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN

State 157:
## Known stack suffix:
## OPEN_SQUARE_BRACKET
## LR(1) items:
exp -> OPEN_SQUARE_BRACKET . loption(separated_nonempty_list(COMMA,exp)) CLOSE_SQUARE_BRACKET [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> OPEN_SQUARE_BRACKET . typ CLOSE_SQUARE_BRACKET [ EQUAL_ARROW DASH_ARROW COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 1
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING_TYPE shift to state 15
-- On STRING shift to state 37
-- On QUESTION shift to state 155
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 157
-- On OPEN_PAREN shift to state 158
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT_TYPE shift to state 20
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT_TYPE shift to state 21
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On BOOL_TYPE shift to state 22
-- On unExp shift to state 111
-- On typ shift to state 31
-- On separated_nonempty_list(COMMA,exp) shift to state 187
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 194
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 190
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:
-- On CLOSE_SQUARE_BRACKET
--   reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 158:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
exp -> OPEN_PAREN . exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> OPEN_PAREN . exp COMMA loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> OPEN_PAREN . loption(separated_nonempty_list(COMMA,typ)) CLOSE_PAREN [ EQUAL_ARROW DASH_ARROW COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 1
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING_TYPE shift to state 15
-- On STRING shift to state 37
-- On QUESTION shift to state 155
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 157
-- On OPEN_PAREN shift to state 158
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT_TYPE shift to state 20
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT_TYPE shift to state 21
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On BOOL_TYPE shift to state 22
-- On unExp shift to state 111
-- On typ shift to state 23
-- On separated_nonempty_list(COMMA,typ) shift to state 28
-- On loption(separated_nonempty_list(COMMA,typ)) shift to state 29
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 159
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:
-- On CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,typ)) ->

State 159:
## Known stack suffix:
## OPEN_PAREN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> OPEN_PAREN exp . CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> OPEN_PAREN exp . COMMA loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On COMMA shift to state 186
-- On CLOSE_PAREN shift to state 193
-- On AT_SYMBOL shift to state 139
## Reductions:

State 160:
## Known stack suffix:
## exp POWER
## LR(1) items:
binExp -> exp POWER . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 161
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 161:
## Known stack suffix:
## exp POWER exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp POWER exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp POWER exp

State 162:
## Known stack suffix:
## exp GREATER_THAN_FLOAT
## LR(1) items:
binExp -> exp GREATER_THAN_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 163
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 163:
## Known stack suffix:
## exp GREATER_THAN_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp GREATER_THAN_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp GREATER_THAN_FLOAT exp

State 164:
## Known stack suffix:
## exp GREATER_THAN_EQUAL_FLOAT
## LR(1) items:
binExp -> exp GREATER_THAN_EQUAL_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 165
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 165:
## Known stack suffix:
## exp GREATER_THAN_EQUAL_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp GREATER_THAN_EQUAL_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp GREATER_THAN_EQUAL_FLOAT exp

State 166:
## Known stack suffix:
## exp GREATER_THAN
## LR(1) items:
binExp -> exp GREATER_THAN . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 167
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 167:
## Known stack suffix:
## exp GREATER_THAN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp GREATER_THAN exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp GREATER_THAN exp

State 168:
## Known stack suffix:
## exp DOUBLE_EQUAL_FLOAT
## LR(1) items:
binExp -> exp DOUBLE_EQUAL_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 169
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 169:
## Known stack suffix:
## exp DOUBLE_EQUAL_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp DOUBLE_EQUAL_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp DOUBLE_EQUAL_FLOAT exp

State 170:
## Known stack suffix:
## exp DIVIDE_FLOAT
## LR(1) items:
binExp -> exp DIVIDE_FLOAT . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 171
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 171:
## Known stack suffix:
## exp DIVIDE_FLOAT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp DIVIDE_FLOAT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On OPEN_PAREN shift to state 131
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN POWER_FLOAT POWER PLUS_FLOAT PLUS NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp DIVIDE_FLOAT exp

State 172:
## Known stack suffix:
## exp PLUS
## LR(1) items:
binExp -> exp PLUS . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 173
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 173:
## Known stack suffix:
## exp PLUS exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp PLUS exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp PLUS exp

State 174:
## Known stack suffix:
## exp NOT_EQUAL
## LR(1) items:
binExp -> exp NOT_EQUAL . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 175
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 175:
## Known stack suffix:
## exp NOT_EQUAL exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp NOT_EQUAL exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp NOT_EQUAL exp

State 176:
## Known stack suffix:
## exp MINUS
## LR(1) items:
binExp -> exp MINUS . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 177
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 177:
## Known stack suffix:
## exp MINUS exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp MINUS exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp MINUS exp

State 178:
## Known stack suffix:
## exp LESS_THAN_EQUAL
## LR(1) items:
binExp -> exp LESS_THAN_EQUAL . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 179
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 179:
## Known stack suffix:
## exp LESS_THAN_EQUAL exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp LESS_THAN_EQUAL exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp LESS_THAN_EQUAL exp

State 180:
## Known stack suffix:
## exp GREATER_THAN_EQUAL
## LR(1) items:
binExp -> exp GREATER_THAN_EQUAL . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 181
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 181:
## Known stack suffix:
## exp GREATER_THAN_EQUAL exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp GREATER_THAN_EQUAL exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp GREATER_THAN_EQUAL exp

State 182:
## Known stack suffix:
## exp DOUBLE_EQUAL
## LR(1) items:
binExp -> exp DOUBLE_EQUAL . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 183
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 183:
## Known stack suffix:
## exp DOUBLE_EQUAL exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp DOUBLE_EQUAL exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp DOUBLE_EQUAL exp

State 184:
## Known stack suffix:
## exp DIVIDE
## LR(1) items:
binExp -> exp DIVIDE . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 185
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 185:
## Known stack suffix:
## exp DIVIDE exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp DIVIDE exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp DIVIDE exp

State 186:
## Known stack suffix:
## OPEN_PAREN exp COMMA
## LR(1) items:
exp -> OPEN_PAREN exp COMMA . loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On separated_nonempty_list(COMMA,exp) shift to state 187
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 188
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 190
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:
-- On CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,exp)) ->

State 187:
## Known stack suffix:
## separated_nonempty_list(COMMA,exp)
## LR(1) items:
loption(separated_nonempty_list(COMMA,exp)) -> separated_nonempty_list(COMMA,exp) . [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production loption(separated_nonempty_list(COMMA,exp)) -> separated_nonempty_list(COMMA,exp)

State 188:
## Known stack suffix:
## OPEN_PAREN exp COMMA loption(separated_nonempty_list(COMMA,exp))
## LR(1) items:
exp -> OPEN_PAREN exp COMMA loption(separated_nonempty_list(COMMA,exp)) . CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On CLOSE_PAREN shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## OPEN_PAREN exp COMMA loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN
## LR(1) items:
exp -> OPEN_PAREN exp COMMA loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> OPEN_PAREN exp COMMA loption(separated_nonempty_list(COMMA,exp)) CLOSE_PAREN

State 190:
## Known stack suffix:
## exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
separated_nonempty_list(COMMA,exp) -> exp . [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
separated_nonempty_list(COMMA,exp) -> exp . COMMA separated_nonempty_list(COMMA,exp) [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On COMMA shift to state 191
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production separated_nonempty_list(COMMA,exp) -> exp

State 191:
## Known stack suffix:
## exp COMMA
## LR(1) items:
separated_nonempty_list(COMMA,exp) -> exp COMMA . separated_nonempty_list(COMMA,exp) [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On separated_nonempty_list(COMMA,exp) shift to state 192
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 190
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 192:
## Known stack suffix:
## exp COMMA separated_nonempty_list(COMMA,exp)
## LR(1) items:
separated_nonempty_list(COMMA,exp) -> exp COMMA separated_nonempty_list(COMMA,exp) . [ CLOSE_SQUARE_BRACKET CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production separated_nonempty_list(COMMA,exp) -> exp COMMA separated_nonempty_list(COMMA,exp)

State 193:
## Known stack suffix:
## OPEN_PAREN exp CLOSE_PAREN
## LR(1) items:
exp -> OPEN_PAREN exp CLOSE_PAREN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> OPEN_PAREN exp CLOSE_PAREN

State 194:
## Known stack suffix:
## OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,exp))
## LR(1) items:
exp -> OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,exp)) . CLOSE_SQUARE_BRACKET [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On CLOSE_SQUARE_BRACKET shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,exp)) CLOSE_SQUARE_BRACKET
## LR(1) items:
exp -> OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,exp)) CLOSE_SQUARE_BRACKET . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> OPEN_SQUARE_BRACKET loption(separated_nonempty_list(COMMA,exp)) CLOSE_SQUARE_BRACKET

State 196:
## Known stack suffix:
## exp LESS_THAN typ
## LR(1) items:
exp -> exp LESS_THAN typ . EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ EQUAL_ARROW DASH_ARROW ]
## Transitions:
-- On EQUAL_ARROW shift to state 197
-- On DASH_ARROW shift to state 24
## Reductions:

State 197:
## Known stack suffix:
## exp LESS_THAN typ EQUAL_ARROW
## LR(1) items:
exp -> exp LESS_THAN typ EQUAL_ARROW . typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On UNKNOWN shift to state 12
-- On UNIT shift to state 14
-- On STRING_TYPE shift to state 15
-- On QUESTION shift to state 16
-- On OPEN_SQUARE_BRACKET shift to state 18
-- On OPEN_PAREN shift to state 19
-- On INT_TYPE shift to state 20
-- On FLOAT_TYPE shift to state 21
-- On BOOL_TYPE shift to state 22
-- On typ shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## exp LESS_THAN typ EQUAL_ARROW typ
## LR(1) items:
exp -> exp LESS_THAN typ EQUAL_ARROW typ . GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
typ -> typ . DASH_ARROW typ [ GREATER_THAN DASH_ARROW ]
## Transitions:
-- On GREATER_THAN shift to state 199
-- On DASH_ARROW shift to state 24
## Reductions:

State 199:
## Known stack suffix:
## exp LESS_THAN typ EQUAL_ARROW typ GREATER_THAN
## LR(1) items:
exp -> exp LESS_THAN typ EQUAL_ARROW typ GREATER_THAN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> exp LESS_THAN typ EQUAL_ARROW typ GREATER_THAN

State 200:
## Known stack suffix:
## exp LESS_THAN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp LESS_THAN exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production binExp -> exp LESS_THAN exp

State 201:
## Known stack suffix:
## exp OPEN_PAREN exp CLOSE_PAREN
## LR(1) items:
exp -> exp OPEN_PAREN exp CLOSE_PAREN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> exp OPEN_PAREN exp CLOSE_PAREN

State 202:
## Known stack suffix:
## filterAction exp IN
## LR(1) items:
exp -> filterAction exp IN . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 203
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 203:
## Known stack suffix:
## filterAction exp IN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> filterAction exp IN exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On L_OR shift to state 119
-- On L_AND shift to state 123
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> filterAction exp IN exp

State 204:
## Known stack suffix:
## CASE exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
case -> CASE exp . list(rul) END [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
## Transitions:
-- On TURNSTILE shift to state 205
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
-- On rul shift to state 209
-- On list(rul) shift to state 211
## Reductions:
-- On END
--   reduce production list(rul) ->

State 205:
## Known stack suffix:
## TURNSTILE
## LR(1) items:
rul -> TURNSTILE . pat EQUAL_ARROW exp [ TURNSTILE END ]
## Transitions:
-- On WILD shift to state 45
-- On TRUE shift to state 46
-- On STRING shift to state 47
-- On QUESTION shift to state 48
-- On OPEN_SQUARE_BRACKET shift to state 50
-- On OPEN_PAREN shift to state 51
-- On INT shift to state 52
-- On IDENT shift to state 53
-- On FLOAT shift to state 54
-- On FALSE shift to state 55
-- On CONSTRUCTOR_IDENT shift to state 56
-- On pat shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## TURNSTILE pat
## LR(1) items:
pat -> pat . COLON typ [ OPEN_PAREN LESS_THAN EQUAL_ARROW CONS COLON ]
pat -> pat . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ OPEN_PAREN LESS_THAN EQUAL_ARROW CONS COLON ]
pat -> pat . CONS pat [ OPEN_PAREN LESS_THAN EQUAL_ARROW CONS COLON ]
pat -> pat . OPEN_PAREN pat CLOSE_PAREN [ OPEN_PAREN LESS_THAN EQUAL_ARROW CONS COLON ]
rul -> TURNSTILE pat . EQUAL_ARROW exp [ TURNSTILE END ]
## Transitions:
-- On OPEN_PAREN shift to state 60
-- On LESS_THAN shift to state 62
-- On EQUAL_ARROW shift to state 207
-- On CONS shift to state 67
-- On COLON shift to state 69
## Reductions:

State 207:
## Known stack suffix:
## TURNSTILE pat EQUAL_ARROW
## LR(1) items:
rul -> TURNSTILE pat EQUAL_ARROW . exp [ TURNSTILE END ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 208
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 208:
## Known stack suffix:
## TURNSTILE pat EQUAL_ARROW exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
rul -> TURNSTILE pat EQUAL_ARROW exp . [ TURNSTILE END ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE END
--   reduce production rul -> TURNSTILE pat EQUAL_ARROW exp

State 209:
## Known stack suffix:
## rul
## LR(1) items:
list(rul) -> rul . list(rul) [ END ]
## Transitions:
-- On TURNSTILE shift to state 205
-- On rul shift to state 209
-- On list(rul) shift to state 210
## Reductions:
-- On END
--   reduce production list(rul) ->

State 210:
## Known stack suffix:
## rul list(rul)
## LR(1) items:
list(rul) -> rul list(rul) . [ END ]
## Transitions:
## Reductions:
-- On END
--   reduce production list(rul) -> rul list(rul)

State 211:
## Known stack suffix:
## CASE exp list(rul)
## LR(1) items:
case -> CASE exp list(rul) . END [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On END shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## CASE exp list(rul) END
## LR(1) items:
case -> CASE exp list(rul) END . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production case -> CASE exp list(rul) END

State 213:
## Known stack suffix:
## DOLLAR_SIGN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
unExp -> DOLLAR_SIGN exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On L_OR shift to state 119
-- On L_AND shift to state 123
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production unExp -> DOLLAR_SIGN exp

State 214:
## Known stack suffix:
## FIX pat DASH_ARROW exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> FIX pat DASH_ARROW exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE THEN IN EOF END ELSE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production exp -> FIX pat DASH_ARROW exp

State 215:
## Known stack suffix:
## FUN pat DASH_ARROW exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
funExp -> FUN pat DASH_ARROW exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE THEN IN EOF END ELSE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production funExp -> FUN pat DASH_ARROW exp

State 216:
## Known stack suffix:
## IF exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> IF exp . THEN exp ELSE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On THEN shift to state 217
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 217:
## Known stack suffix:
## IF exp THEN
## LR(1) items:
exp -> IF exp THEN . exp ELSE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 218
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 218:
## Known stack suffix:
## IF exp THEN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> IF exp THEN exp . ELSE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On ELSE shift to state 219
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 219:
## Known stack suffix:
## IF exp THEN exp ELSE
## LR(1) items:
exp -> IF exp THEN exp ELSE . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 220
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 220:
## Known stack suffix:
## IF exp THEN exp ELSE exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> IF exp THEN exp ELSE exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE THEN IN EOF END ELSE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production exp -> IF exp THEN exp ELSE exp

State 221:
## Known stack suffix:
## LESS_THAN LESS_THAN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> LESS_THAN LESS_THAN exp . QUESTION SEXP_STRING GREATER_THAN GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 222
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 222:
## Known stack suffix:
## LESS_THAN LESS_THAN exp QUESTION
## LR(1) items:
exp -> exp QUESTION . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> LESS_THAN LESS_THAN exp QUESTION . SEXP_STRING GREATER_THAN GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On SEXP_STRING shift to state 223
-- On LESS_THAN shift to state 126
## Reductions:

State 223:
## Known stack suffix:
## LESS_THAN LESS_THAN exp QUESTION SEXP_STRING
## LR(1) items:
exp -> LESS_THAN LESS_THAN exp QUESTION SEXP_STRING . GREATER_THAN GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On GREATER_THAN shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## LESS_THAN LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN
## LR(1) items:
exp -> LESS_THAN LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN . GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On GREATER_THAN shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## LESS_THAN LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN GREATER_THAN
## LR(1) items:
exp -> LESS_THAN LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN GREATER_THAN . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> LESS_THAN LESS_THAN exp QUESTION SEXP_STRING GREATER_THAN GREATER_THAN

State 226:
## Known stack suffix:
## LET pat SINGLE_EQUAL exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> LET pat SINGLE_EQUAL exp . IN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On IN shift to state 227
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 227:
## Known stack suffix:
## LET pat SINGLE_EQUAL exp IN
## LR(1) items:
exp -> LET pat SINGLE_EQUAL exp IN . exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On WILD shift to state 1
-- On UNDEF shift to state 2
-- On TYP_FUN shift to state 3
-- On TYP shift to state 9
-- On TRUE shift to state 35
-- On TEST shift to state 36
-- On STRING shift to state 37
-- On QUESTION shift to state 38
-- On PAUSE shift to state 40
-- On OPEN_SQUARE_BRACKET shift to state 41
-- On OPEN_PAREN shift to state 42
-- On NAMED_FUN shift to state 43
-- On MINUS shift to state 84
-- On L_NOT shift to state 85
-- On LET shift to state 86
-- On LESS_THAN shift to state 89
-- On INT shift to state 91
-- On IF shift to state 92
-- On IDENT shift to state 93
-- On HIDE shift to state 94
-- On FUN shift to state 95
-- On FLOAT shift to state 98
-- On FIX shift to state 99
-- On FALSE shift to state 102
-- On EVAL shift to state 103
-- On DOLLAR_SIGN shift to state 104
-- On DEBUG shift to state 105
-- On CONSTRUCTOR_IDENT shift to state 106
-- On CASE shift to state 109
-- On BUILTIN shift to state 110
-- On unExp shift to state 111
-- On funExp shift to state 112
-- On filterAction shift to state 113
-- On exp shift to state 228
-- On case shift to state 121
-- On binExp shift to state 122
## Reductions:

State 228:
## Known stack suffix:
## LET pat SINGLE_EQUAL exp IN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> LET pat SINGLE_EQUAL exp IN exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE THEN IN EOF END ELSE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production exp -> LET pat SINGLE_EQUAL exp IN exp

State 229:
## Known stack suffix:
## L_NOT exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
unExp -> L_NOT exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production unExp -> L_NOT exp

State 230:
## Known stack suffix:
## MINUS exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
unExp -> MINUS exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On PLUS_FLOAT shift to state 144
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On MINUS_FLOAT shift to state 148
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DIVIDE_FLOAT shift to state 170
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE TIMES THEN POWER PLUS NOT_EQUAL MINUS LESS_THAN_EQUAL IN GREATER_THAN_EQUAL EOF END ELSE DOUBLE_EQUAL DIVIDE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production unExp -> MINUS exp

State 231:
## Known stack suffix:
## NAMED_FUN IDENT pat DASH_ARROW exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
funExp -> NAMED_FUN IDENT pat DASH_ARROW exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE THEN IN EOF END ELSE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production funExp -> NAMED_FUN IDENT pat DASH_ARROW exp

State 232:
## Known stack suffix:
## TEST exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> TEST exp . END [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN END DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On END shift to state 233
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 233:
## Known stack suffix:
## TEST exp END
## LR(1) items:
exp -> TEST exp END . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> TEST exp END

State 234:
## Known stack suffix:
## TYP tpat SINGLE_EQUAL typ IN exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> TYP tpat SINGLE_EQUAL typ IN exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On L_OR shift to state 119
-- On L_AND shift to state 123
## Reductions:
-- On TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL
--   reduce production exp -> TYP tpat SINGLE_EQUAL typ IN exp

State 235:
## Known stack suffix:
## TYP_FUN tpat DASH_ARROW exp
## LR(1) items:
binExp -> exp . PLUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_AND exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
binExp -> exp . L_OR exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> TYP_FUN tpat DASH_ARROW exp . [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . CONS exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TURNSTILE TIMES_FLOAT TIMES THEN SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN IN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF END ELSE DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN AT_SYMBOL ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:
-- On TURNSTILE THEN IN EOF END ELSE COMMA CLOSE_SQUARE_BRACKET CLOSE_PAREN
--   reduce production exp -> TYP_FUN tpat DASH_ARROW exp

State 236:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

State 237:
## Known stack suffix:
## exp
## LR(1) items:
binExp -> exp . PLUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . PLUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . MINUS_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . TIMES_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . POWER_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DIVIDE_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . DOUBLE_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . NOT_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . LESS_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . GREATER_THAN_EQUAL_FLOAT exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_AND exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
binExp -> exp . L_OR exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . OPEN_PAREN exp CLOSE_PAREN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . QUESTION LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . LESS_THAN typ EQUAL_ARROW typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . CONS exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . SEMI_COLON exp [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
exp -> exp . AT_SYMBOL LESS_THAN typ GREATER_THAN [ TIMES_FLOAT TIMES SEMI_COLON QUESTION POWER_FLOAT POWER PLUS_FLOAT PLUS OPEN_PAREN NOT_EQUAL_FLOAT NOT_EQUAL MINUS_FLOAT MINUS L_OR L_AND LESS_THAN_FLOAT LESS_THAN_EQUAL_FLOAT LESS_THAN_EQUAL LESS_THAN GREATER_THAN_FLOAT GREATER_THAN_EQUAL_FLOAT GREATER_THAN_EQUAL GREATER_THAN EOF DOUBLE_EQUAL_FLOAT DOUBLE_EQUAL DIVIDE_FLOAT DIVIDE CONS AT_SYMBOL ]
program -> exp . EOF [ # ]
## Transitions:
-- On TIMES_FLOAT shift to state 115
-- On TIMES shift to state 133
-- On SEMI_COLON shift to state 117
-- On QUESTION shift to state 125
-- On POWER_FLOAT shift to state 135
-- On POWER shift to state 160
-- On PLUS_FLOAT shift to state 144
-- On PLUS shift to state 172
-- On OPEN_PAREN shift to state 131
-- On NOT_EQUAL_FLOAT shift to state 146
-- On NOT_EQUAL shift to state 174
-- On MINUS_FLOAT shift to state 148
-- On MINUS shift to state 176
-- On L_OR shift to state 119
-- On L_AND shift to state 123
-- On LESS_THAN_FLOAT shift to state 150
-- On LESS_THAN_EQUAL_FLOAT shift to state 152
-- On LESS_THAN_EQUAL shift to state 178
-- On LESS_THAN shift to state 154
-- On GREATER_THAN_FLOAT shift to state 162
-- On GREATER_THAN_EQUAL_FLOAT shift to state 164
-- On GREATER_THAN_EQUAL shift to state 180
-- On GREATER_THAN shift to state 166
-- On EOF shift to state 238
-- On DOUBLE_EQUAL_FLOAT shift to state 168
-- On DOUBLE_EQUAL shift to state 182
-- On DIVIDE_FLOAT shift to state 170
-- On DIVIDE shift to state 184
-- On CONS shift to state 137
-- On AT_SYMBOL shift to state 139
## Reductions:

State 238:
## Known stack suffix:
## exp EOF
## LR(1) items:
program -> exp EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> exp EOF

