fun model, action ->
  case action
  | AddBooking(user, weekday, timeOfDay) => 
        let newBookingId = List.length(getBookings(model)) + 1 in
        let newBooking = (weekday, timeOfDay, user, newBookingId) in
        let newModel = (model.BookingFormData, model.Bookings ++ [newBooking], newBookingId) in
        newModel
  | CancelBooking(user, bookingId) => 
        let newBookings = List.filter((fun booking -> booking.BookingID != bookingId), model.Bookings) in
        let newModel = (model.BookingFormData, newBookings , model.BookingID) in
        newModel
  | ClearBookings => 
        let newModel = (model.BookingFormData, [], model.BookingID) in
        newModel
  | ClearRange(time1, time2) => 
        let newBookings = List.filter((fun booking -> (weekdayIndex(booking.time) < weekdayIndex(time1)) \/ (weekdayIndex(booking.time) > weekdayIndex(time2))), model.Bookings) in
        let newModel = (model.BookingFormData, newBookings , model.BookingID) in
        newModel
  end