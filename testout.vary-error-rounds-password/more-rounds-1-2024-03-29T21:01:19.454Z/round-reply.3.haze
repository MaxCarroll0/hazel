fun ((password, criteria, _), action) ->
  let calculate_strength: (String, [PasswordCriteria]) -> PasswordStrength = fun _ -> Weak end in
  case action 
  | UpdatePassword(new_password) =>
      (new_password, criteria, calculate_strength(new_password, criteria))
  | ClearCriteria => 
      (password, [], calculate_strength(password, []))
  | AddCriterion(new_criteria) =>
      (password, new_criteria :: criteria, calculate_strength(password, new_criteria :: criteria))
  | RemoveCriterion(criterion_to_remove) => 
      let updated_criteria = List.filter ((fun criterion -> not(criterion == criterion_to_remove)), criteria) in
      (password, updated_criteria, calculate_strength(password, updated_criteria))
  end