The following static errors were discovered:
Error in term:
  remove_criterion fun ((criterion, criteria)) ->
 List.filter(fun c ->
 c != criterion, criteria)
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  add_criterion fun ((criterion, criteria)) ->
 criterion :: criteria
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  clear_criteria fun _ ->
 
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  meet_criteria
Nature of error: Variable meet_criteria is not bound
Error in term:
  add_criterion
Nature of error: Variable add_criterion is not bound
Error in term:
  clear_criteria
Nature of error: Variable clear_criteria is not bound
Error in term:
  meet_criterion
Nature of error: Variable meet_criterion is not bound
Error in term:
  meet_criteria fun ((password, criteria)) ->
 let strength = check_strength(password, criteria) in
 (password, criteria, strength), check_strength fun ((password, criteria)) ->
 if List.for_all(fun criterion ->
 meet_criterion(password, criterion), criteria) then Strong else if List.exists(fun criterion ->
 meet_criterion(password, criterion), criteria) then Moderate else Weak
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  check_strength
Nature of error: Variable check_strength is not bound
Error in term:
  clear_criteria
Nature of error: Variable clear_criteria is not bound
Error in term:
  check_strength fun ((password, criteria)) ->
 if List.for_all(fun criterion ->
 meet_criterion(password, criterion), criteria) then Strong else if List.exists(fun criterion ->
 meet_criterion(password, criterion), criteria) then Moderate else Weak
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  fun ((model, action)) ->
 case action
 | UpdatePassword(password) => meet_criteria(password, model._2)
| ClearCriteria => clear_criteria(model._2)
| AddCriterion(criterion) => add_criterion(criterion, model._2)
| RemoveCriterion(criterion) => remove_criterion(criterion, model._2)
end where add_criterion fun ((criterion, criteria)) ->
 criterion :: criteria, remove_criterion fun ((criterion, criteria)) ->
 List.filter(fun c ->
 c != criterion, criteria), clear_criteria fun _ ->
 , meet_criteria fun ((password, criteria)) ->
 let strength = check_strength(password, criteria) in
 (password, criteria, strength), check_strength fun ((password, criteria)) ->
 if List.for_all(fun criterion ->
 meet_criterion(password, criterion), criteria) then Strong else if List.exists(fun criterion ->
 meet_criterion(password, criterion), criteria) then Moderate else Weak end.
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  check_strength
Nature of error: Variable check_strength is not bound
Error in term:
  meet_criterion
Nature of error: Variable meet_criterion is not bound
Error in term:
  model._2
Nature of error: "model._2" isn't a valid token
Error in term:
  end.
Nature of error: "end." isn't a valid token
Error in term:
  model._2
Nature of error: "model._2" isn't a valid token
Error in term:
  remove_criterion
Nature of error: Variable remove_criterion is not bound
Error in term:
  where add_criterion fun ((criterion, criteria)) ->
 criterion :: criteria, remove_criterion fun ((criterion, criteria)) ->
 List.filter(fun c ->
 c != criterion, criteria), clear_criteria fun _ ->
 , meet_criteria fun ((password, criteria)) ->
 let strength = check_strength(password, criteria) in
 (password, criteria, strength), check_strength fun ((password, criteria)) ->
 if List.for_all(fun criterion ->
 meet_criterion(password, criterion), criteria) then Strong else if List.exists(fun criterion ->
 meet_criterion(password, criterion), criteria) then Moderate else Weak end.
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  model._2
Nature of error: "model._2" isn't a valid token
Error in term:
  remove_criterion
Nature of error: Variable remove_criterion is not bound
Error in term:
  model._2
Nature of error: "model._2" isn't a valid token
Error in term:
  where
Nature of error: Variable where is not bound
Error in term:
  meet_criteria
Nature of error: Variable meet_criteria is not bound
Error in term:
  add_criterion fun ((criterion, criteria)) ->
 criterion :: criteria, remove_criterion fun ((criterion, criteria)) ->
 List.filter(fun c ->
 c != criterion, criteria), clear_criteria fun _ ->
 , meet_criteria fun ((password, criteria)) ->
 let strength = check_strength(password, criteria) in
 (password, criteria, strength), check_strength fun ((password, criteria)) ->
 if List.for_all(fun criterion ->
 meet_criterion(password, criterion), criteria) then Strong else if List.exists(fun criterion ->
 meet_criterion(password, criterion), criteria) then Moderate else Weak end.
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  add_criterion
Nature of error: Variable add_criterion is not bound
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion