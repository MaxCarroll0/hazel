fun (playList, action) ->
    case action
    | PlaySong(id) =>
        let (songs, _) = playList in
        if List.exists(fun song -> song == id, songs)
        then (songs, Playing(id))
        else playList
    | PauseCurrentSong =>
        let (songs, state) = playList in
        case state
        | Playing(id) => (songs, PausedOn(id))
        | _ => playList
        end
    | AddSong(id) =>
        let (songs, state) = playList in
        (id::songs, state)
    | RemoveSong(id) =>
        let (songs, state) = playList in
        let newSongs = List.filter(fun song -> song != id, songs) in
        (newSongs, state)
    end