# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, state), action ->
  case action
  | PlaySong(id) => (playlist, Playing(id))
  | PauseCurrentSong ->
    case state
    | Playing(id) => (playlist, PausedOn(id))
    | _ => (playlist, state)
    end
  | RemoveSong(id) => (List.filter(fun x -> x != id, playlist), state)
  | AddSong(id) => (id::playlist, state)
  end
in