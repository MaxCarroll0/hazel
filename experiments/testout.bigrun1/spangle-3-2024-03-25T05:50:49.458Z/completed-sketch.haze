# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
    case playlist
    | (songs, state), action =>
        case action
        | PlaySong(id) => (songs, Playing(id))
        | PauseCurrentSong => 
            case state
            | Playing(id) => (songs, PausedOn(id))
            | _ => playlist
            end
        | RemoveSong(id) => 
            let newsongs = List.filter(fun song_id -> song_id != id, songs) in
            (newsongs, NoSongSelected)
        | AddSong(id) => 
            let newsongs = id::songs in
            (newsongs, NoSongSelected)
        end
    end
in