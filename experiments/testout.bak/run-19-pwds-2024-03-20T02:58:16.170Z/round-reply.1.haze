fun (model, action) ->
    let (password, criteria, strength) = model in
    case action
    | UpdatePassword(new_password) => (new_password, criteria, determine_strength(new_password, criteria))
    | ClearCriteria => (password, [], Weak)
    | AddCriterion(criterion) =>  (password, criterion::criteria, determine_strength(password, criterion::criteria))
    | RemoveCriterion(criterion) => 
        let new_criteria = List.filter(fun x -> x != criterion, criteria) in  
        (password, new_criteria, determine_strength(password, new_criteria))
  where
  determine_strength: (String, [PasswordCriteria]) -> PasswordStrength = fun (password, criteria) -> ???