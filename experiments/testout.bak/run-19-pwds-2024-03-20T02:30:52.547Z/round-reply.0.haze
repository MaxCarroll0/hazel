fun model, action ->
  case action
  | CalculateStrength(password) => model { strength = calculateStrength(password, model.criteria) }
  | AddTransform(transform) => 
      let new_transforms = String.transform(model.password, transform::model.transforms) in 
      model {
        password = string_concat(model.password, new_transforms), 
        strength = strength_of(String.length(model.password))
      }
  | Reverse => model { password = String.reverse(model.password) }
  | RemoveSubstring(start, end_) => 
      let new_password = string_sub(model.password, start, end_)  in 
      model { 
        password = new_password, 
        strength = strength_of(String.length(new_password))
      }
  end