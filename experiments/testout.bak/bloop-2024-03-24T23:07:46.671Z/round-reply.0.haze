
fun m, a ->
    case a
    | AddBooking((user, day, time)) =>
        let (times, bookings, nextid) = m in
        ((day, time), user), (nextid, user, day, time) :: bookings, nextid + 1
    | CancelBooking((user, id)) =>
        let (times, bookings, nextid) = m in
        times, List.filter(fun (bookingId, bookingUser, _) -> bookingId != id \/ bookingUser != user, bookings), nextid
    | ClearBookings =>
        let (times, _, _) = m in
        times, [], 0
    end