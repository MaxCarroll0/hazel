fun (model, action) ->
  let (password, criteria, _) = model in
  case action
    | UpdatePassword(pwd) => (pwd, criteria, calculateStrength(pwd, criteria))
    | ClearCriteria => (password, [], Weak)
    | AddCriterion(c) => (password, c::criteria, calculateStrength(password, c::criteria))
    | RemoveCriterion(c) => let filteredCriteria = List.filter((fun crit -> crit != c), criteria) in 
                             (password, filteredCriteria, calculateStrength(password, filteredCriteria))
  end