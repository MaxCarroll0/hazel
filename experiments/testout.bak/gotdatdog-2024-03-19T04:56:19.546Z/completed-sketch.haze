let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | AddBooking(user, day, time) => 
    let newBooking = ((day, time), user, model.BookingID + 1) in 
    (model.BookingFormData, newBooking::model.Bookings, model.BookingID + 1)
  | CancelBooking(user, bookingID) ->
    let remainingBookings = List.filter((fun (time, user, id) -> id != bookingID), model.Bookings) in 
    (model.BookingFormData, remainingBookings, model.BookingID)
  | ClearBookings => 
    (model.BookingFormData, [], model.BookingID)
  | ClearRange(rangeStart, rangeEnd) ->
    let remainingBookings = List.filter((fun (time, user, id) -> not (time >= rangeStart && time <= rangeEnd), model.Bookings)) in
    (model.BookingFormData, remainingBookings, model.BookingID)
  end
in
