fun m, a ->
case m, a
| (password, criteria, _), UpdatePassword(new_password) =>
  let new_strength = calculateStrength(new_password, criteria) in
  (new_password, criteria, new_strength)
| (password, criteria, strength), ClearCriteria => 
  (password, [], Weak)
| (password, criteria, strength), AddCriterion(criteria) =>
  let new_criteria = criteria :: criteria in
  (password, new_criteria, calculateStrength(password, new_criteria))
| (password, criteria, strength), RemoveCriterion(criteria_to_remove) =>
  let new_criteria = List.filter((!=) criteria_to_remove, criteria) in
  (password, new_criteria, calculateStrength(password, new_criteria)) end
end