fun (playList, action) -> 
  case action
    | PlaySong(id) => (playList.songs, Playing(id))
    | PauseCurrentSong => (playList.songs, match playList.state with 
                                         | Playing(id) => PausedOn(id)
                                         | _ => playList.state)
    | RemoveSong(id) => (List.filter((fun x -> x != id), playList.songs), 
                         match playList.state with 
                         | Playing(song_id) | PausedOn(song_id) => if song_id == id then NoSongSelected else playList.state
                         | _ => playList.state)
    | AddSong(id) => (id :: playList.songs, playList.state)
  end