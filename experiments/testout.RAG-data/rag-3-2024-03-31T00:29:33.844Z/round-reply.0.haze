
fun model, action ->
  case action of
    | PlaySong(id) => 
        case model of ([], _) => model
        | (ids, _) if List.member(id, ids) => (ids, Playing(id))
        | _ => model
      end
    | PauseCurrentSong =>
        case model of (_, Playing(id)) => (ids, PausedOn(id))
        | _ => model
      end
    | RemoveSong(id) =>
        case model of (ids, _) => (List.filter(x-> x != id, ids), NoSongSelected)
        | _ => model
      end
    | AddSong(id) =>
        case model of (ids, state) => if List.member(id, ids) then model
                                       else (id::ids, state)
      end
  end