# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun pl, action ->
  case action
  | PlaySong(id) => (get_songs(pl), Playing(id))
  | PauseCurrentSong =>
      (case get_state(pl)
       | Playing(id) => (get_songs(pl), PausedOn(id))
       | _ => pl
       end)
  | RemoveSong(id) => (List.filter(fun songId -> songId != id, get_songs(pl)), get_state(pl))
  | AddSong(id) => (List.sort(fun a, b -> a - b, id::get_songs(pl)), get_state(pl))
  end
in