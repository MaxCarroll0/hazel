# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
  case action
  | PlaySong(id) => (get_songs(playlist), Playing(id))
  | PauseCurrentSong => 
    let state = get_state(playlist) in
    (get_songs(playlist), case state 
      | Playing(id) => PausedOn(id) 
      | _ => NoSongSelected 
     end)
  | RemoveSong(id) => 
    let songs = List.filter(fun song_id -> song_id != id, get_songs(playlist)) in
    (songs, get_state(playlist))
  | AddSong(id) => 
    let songs = id::get_songs(playlist) in
    (songs, get_state(playlist))
  end
in