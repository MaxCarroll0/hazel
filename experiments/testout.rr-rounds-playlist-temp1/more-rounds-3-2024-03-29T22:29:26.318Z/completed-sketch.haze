# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun playlist, action ->
  case action
  | PlaySong(id) => 
      let (songs, state) = playlist in 
      let new_state =
        case state
        | NoSongSelected => Playing(id)
        | Playing(_) => Playing(id)
        | PausedOn(_) => Playing(id)
        end in
      (songs, new_state)
  | PauseCurrentSong => 
      let (songs, state) = playlist in 
      let new_state =
        case state
        | NoSongSelected => NoSongSelected 
        | Playing(id) => PausedOn(id) 
        | PausedOn(_) => NoSongSelected  
        end in
      (songs, new_state)
  | RemoveSong(id) => 
      let (songs, state) = playlist in 
      (List.filter(fun song_id -> song_id != id, songs), state)
  | AddSong(id) => 
      let (songs, state) = playlist in 
      (List.append(songs, [id]), state)
  end
in