fun (model, action) ->
  case model, action
  | (password, criteria, strength), UpdatePassword(new_password) => (new_password, criteria, check_strength(new_password, criteria))
  | (password, criteria, strength), ClearCriteria => (password, [], check_strength(password, []))
  | (password, criteria, strength), AddCriterion(new_criterion) => (password, new_criterion::criteria, check_strength(password, new_criterion::criteria))
  | (password, criteria, strength), RemoveCriterion(old_criterion) =>
    let new_criteria = List.filter(platforms, fun(pc) -> pc != old_criterion end) in
    (password, new_criteria, check_strength(password, new_criteria))
  end
where check_strength: (Password, Criteria) -> Strength is fun(password, criteria) -> calculate_strength(password, criteria) end