fun (model, action) ->
  let (password, criteria, strength) = model in
  case action
  | UpdatePassword(new_password) => (new_password, criteria, check_strength(new_password, criteria))
  | ClearCriteria => (password, [], check_strength(password, []))
  | AddCriterion(new_criterion) => (password, new_criterion::criteria, check_strength(password, new_criterion::criteria))
  | RemoveCriterion(old_criterion) =>
    let new_criteria = List.filter(criteria, fun (pc) -> pc != old_criterion end) in 
    (password, new_criteria, check_strength(password, new_criteria))
  end
where check_strength: (Password, Criteria) -> Strength is fun(password, criteria) -> calculate_password_strength(password, criteria) end