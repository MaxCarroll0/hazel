fun m, a ->
  case a 
  | UpdatePassword(p) => (p, m.1, check_strength(p, m.1))
  | ClearCriteria => (m.0, [], Weak)
  | AddCriterion(c) => (m.0, m.1 @ [c], check_strength(m.0, m.1 @ [c]))
  | RemoveCriterion(c) => let new_criteria = List.filter(m.1, fun x -> x != c) in (m.0, new_criteria, check_strength(m.0, new_criteria))
  end
where
  check_strength: (Password, Criteria) -> Strength = fun p, c -> ... # Password strength checking logic
end