fun (model, action) ->
  case action
    | UpdatePassword(password) => (password, model.1, evaluate_strength(model.1, password))
    | ClearCriteria => (model.0, [], Weak)
    | AddCriterion(criterion) => (model.0, criterion :: model.1, evaluate_strength(model.1, model.0))
    | RemoveCriterion(criterion) => (model.0, List.remove(model.1, criterion), evaluate_strength(model.1, model.0))
  end
where
evaluate_strength: ([PasswordCriteria], String) -> PasswordStrength = fun (criteria, password) ->
  case criteria
    | [] => Weak
    | _::_ => Moderate
    | _::_::_ => Strong
    | _::_::_::_::_ => Strong
  end