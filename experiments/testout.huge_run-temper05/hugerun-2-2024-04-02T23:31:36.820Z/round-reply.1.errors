The following static errors were discovered:
Error in term:
  time
Nature of error: Expecting type Time but got inconsistent type TimeOfDay
Error in term:
  getNextId
Nature of error: Variable getNextId is not bound
Error in term:
  getFormState
Nature of error: Variable getFormState is not bound
Error in term:
  getBookings(model)
Nature of error: Expecting type [(TimeOfDay, User, ?)] but got inconsistent type [Booking]
Error in term:
  getNextId
Nature of error: Variable getNextId is not bound
Error in term:
  case action
 | AddBooking((user, weekday, time)) => if !bookingExists(model, (time, user, getNextId(model))) then model else let newBooking = (time, user, getNextId(model)) in
 (newBooking :: getBookings(model), getNextId(model) + 1)
| RemoveBooking(id) => let bookings = getBookings(model) in
 let newBookings = List.filter(fun ((_, _, i : BookingID)) ->
 i != id, bookings) in
 (getFormState(model), newBookings, getNextId(model))
| UpdateBuffer((time, user)) => ((time, user, getNextId(model)), getBookings(model), getNextId(model))
end
Nature of error: Expecting branches to have consistent types but got types: ([(TimeOfDay, User, ?)], Int), (?, [?], ?), ((?, ?, ?), [Booking], ?)
Error in term:
  getNextId
Nature of error: Variable getNextId is not bound
Error in term:
  getNextId
Nature of error: Variable getNextId is not bound
Error in term:
  getNextId
Nature of error: Variable getNextId is not bound
Error in term:
  getNextId
Nature of error: Variable getNextId is not bound
Error in term:
  RemoveBooking
Nature of error: Constructor is not defined
Error in term:
  UpdateBuffer
Nature of error: Constructor is not defined
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion