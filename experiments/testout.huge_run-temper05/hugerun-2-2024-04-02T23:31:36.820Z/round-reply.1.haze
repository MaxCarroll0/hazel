fun model, action ->
  case action
    | AddBooking(user, weekday, time) =>
      if !bookingExists(model, (time, user, getNextId(model)))
      then model
      else let newBooking = (time, user, getNextId(model)) in
           (newBooking :: getBookings(model), getNextId(model) + 1)
    | RemoveBooking(id) =>
      let bookings = getBookings(model) in
      let newBookings = List.filter(fun (_, _, i:BookingID) -> i != id, bookings) in
      (getFormState(model), newBookings, getNextId(model))
    | UpdateBuffer(time, user) =>
      ((time, user, getNextId(model)), getBookings(model), getNextId(model))
  end