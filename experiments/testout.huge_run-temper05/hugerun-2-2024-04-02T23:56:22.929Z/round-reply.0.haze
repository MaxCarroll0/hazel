
fun model, action ->
  case action
  | BookRoom(room_id, start_time, end_time) =>
    let new_booking = {room_id = room_id; start_time = start_time; end_time = end_time} in
    {model with bookings = new_booking::model.bookings}
  | CancelBooking(booking_id) =>
    let new_bookings = List.filter(fun b -> b.id != booking_id, model.bookings) in
    {model with bookings = new_bookings}
  | UpdateRoom(room_id, new_room) =>
    let new_rooms = List.map(fun r -> if r.id == room_id then new_room else r, model.rooms) in
    {model with rooms = new_rooms}
  end