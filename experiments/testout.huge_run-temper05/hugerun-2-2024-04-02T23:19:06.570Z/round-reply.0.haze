fun model, action ->
  case action
  | PlayListAction.AddSong(song_id) => 
    let songs = get_songs(model) in
    {model with songs = song_id :: songs}
  | PlayListAction.RemoveSong(song_id) => 
    let songs = get_songs(model) in
    let new_songs = List.filter((fun id -> id != song_id), songs) in
    {model with songs = new_songs}
  | PlayListAction.TogglePlay => 
    let state = get_state(model) in
    let new_state = match state with
      | PlayListState.Playing => PlayListState.Paused
      | PlayListState.Paused => PlayListState.Playing
    in
    {model with state = new_state}
  end