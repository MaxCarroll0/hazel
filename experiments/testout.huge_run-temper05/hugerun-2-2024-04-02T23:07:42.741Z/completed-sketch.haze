# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playList, action) ->
  case action
  | PlaySong(id) => (playList[0], Playing(id))
  | PauseCurrentSong =>
      case playList[1]
      | Playing(id) => (playList[0], PausedOn(id))
      | _ => playList
      end
  | RemoveSong(id) => (List.filter(fun songId -> songId != id, playList[0]), playList[1])
  | AddSong(id) =>
      if List.mem(id, playList[0])
      then playList
      else (id::playList[0], playList[1])
      end
  end
in