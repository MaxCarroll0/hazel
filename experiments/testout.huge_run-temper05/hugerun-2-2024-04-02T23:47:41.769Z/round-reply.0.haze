fun model, action ->
  case action
  | AddBooking(user, weekday, timeOfDay) => 
      let (bookingFormData, bookings, bookingId) = model in
      let newBooking = ((weekday, timeOfDay), user, bookingId) in
      (bookingFormData, newBooking::bookings, bookingId + 1)
  | CancelBooking(user, id) => 
      let (bookingFormData, bookings, bookingId) = model in
      let newBookings = List.filter(fun ((_, bookedUser, bookedId)) -> bookedUser != user \/ bookedId != id, bookings) in
      (bookingFormData, newBookings, bookingId)
  | ClearBookings => 
      let (bookingFormData, _, bookingId) = model in
      (bookingFormData, [], bookingId)
  end