fun model, action ->
  case action
  | AddUser(user) => { model with users = user :: model.users }
  | RemoveUser(user) => { model with users = List.filter((fun u -> u != user), model.users) }
  | AddBooking(user, booking) => { model with bookings = (user, booking) :: model.bookings }
  | RemoveBooking(user, bookingId) => { model with bookings = List.filter((fun (u, b) -> u != user \/ b.id != bookingId), model.bookings) }
  | UpdateForm(weekday, timeOfDay, room) => { model with formState = Some((weekday, timeOfDay, room)) }
  | SubmitForm => case model.formState with
    | Some((weekday, timeOfDay, room)) => { model with bookings = (model.currentUser, { id = List.length(model.bookings), weekday = weekday, timeOfDay = timeOfDay, room = room }) :: model.bookings, formState = None }
    | None => model
  end
  | SetCurrentUser(user) => { model with currentUser = user }
  | Logout => { model with currentUser = None } 
  end