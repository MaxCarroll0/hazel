# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun model, action ->
  case action
  | PlaySong(id) => (get_songs(model), Playing(id))
  | PauseCurrentSong => (get_songs(model), case get_state(model) of | Playing(id) => PausedOn(id) | _ => get_state(model) end)
  | RemoveSong(id) => (List.filter_map((fun song -> if song == id then None else Some(song)), get_songs(model)), get_state(model))
  | AddSong(id) => (List.rev_append([id], get_songs(model)), get_state(model))
  end
in