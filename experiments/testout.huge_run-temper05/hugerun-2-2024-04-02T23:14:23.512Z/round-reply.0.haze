fun model, action ->
  case action
  | PlaySong(id) => (get_songs(model), Playing(id))
  | PauseCurrentSong => (get_songs(model), match get_state(model) with | Playing(id) => PausedOn(id) | _ => get_state(model) end)
  | RemoveSong(id) => (List.filter_map(fun x -> if x != id then Some(x) else None, get_songs(model)), match get_state(model) with | Playing(id) => NoSongSelected | _ => get_state(model) end)
  | AddSong(id) => (List.concat_map(fun x -> if x == id then [] else [x], get_songs(model)), get_state(model))
  end