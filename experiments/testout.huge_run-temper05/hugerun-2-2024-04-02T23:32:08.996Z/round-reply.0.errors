The following static errors were discovered:
Error in term:
  time
Nature of error: Expecting type Time but got inconsistent type TimeOfDay
Error in term:
  getBookingId
Nature of error: Variable getBookingId is not bound
Error in term:
  getBookings(model)
Nature of error: Expecting type [(TimeOfDay, User, ?)] but got inconsistent type [Booking]
Error in term:
  getBookingId
Nature of error: Variable getBookingId is not bound
Error in term:
  getFormData
Nature of error: Variable getFormData is not bound
Error in term:
  case action
 | AddBooking((user, weekday, time)) => if bookingExists(model, (time, user, getBookingId(model))) then model else (getFormData(model), (time, user, getBookingId(model)) :: getBookings(model), getBookingId(model) + 1)
| RemoveBooking(id) => let bookings = List.filter(fun ((_, _, bookingId)) ->
 bookingId != id, getBookings(model)) in
 (getFormData(model), bookings, getBookingId(model))
| UpdateBuffer((time, user)) => ((time, user, getActionMode(model)), getBookings(model), getBookingId(model))
end
Nature of error: Expecting branches to have consistent types but got types: (?, [(TimeOfDay, User, ?)], Int), (?, [?], ?), ((?, ?, ?), [Booking], ?)
Error in term:
  getActionMode
Nature of error: Variable getActionMode is not bound
Error in term:
  getFormData
Nature of error: Variable getFormData is not bound
Error in term:
  getBookingId
Nature of error: Variable getBookingId is not bound
Error in term:
  getBookingId
Nature of error: Variable getBookingId is not bound
Error in term:
  getBookingId
Nature of error: Variable getBookingId is not bound
Error in term:
  UpdateBuffer
Nature of error: Constructor is not defined
Error in term:
  RemoveBooking
Nature of error: Constructor is not defined
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion