fun (model, action) ->
  case action
  | Init => initialModel
  | PasswordInput(password) => 
    let trimmed_password = string_trim(password) in
    let strength = calculateStrength(trimmed_password, model.criteria) in
    {model with password = trimmed_password, strength = strength}
  | AddCriteria(criteria) => 
    let new_criteria = model.criteria @ [criteria] in
    let strength = calculateStrength(model.password, new_criteria) in
    {model with criteria = new_criteria, strength = strength}
  | RemoveCriteria(criteria) => 
    let new_criteria = List.filter(fun c -> c != criteria, model.criteria) in
    let strength = calculateStrength(model.password, new_criteria) in
    {model with criteria = new_criteria, strength = strength}
  end