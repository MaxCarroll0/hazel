# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
  case action
  | PlaySong(id) => (playlist[0], Playing(id))
  | PauseCurrentSong => 
      case playlist[1]
      | Playing(id) => (playlist[0], PausedOn(id))
      | _ => playlist
      end
  | RemoveSong(id) => (List.filter(fun x -> x != id, playlist[0]), playlist[1])
  | AddSong(id) => (id::playlist[0], playlist[1])
  end
in