# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (password, criteria, strength), action ->
  case action
  | UpdatePassword(new_password) =>
      let new_strength = calculateStrength(new_password, criteria) in
      (new_password, criteria, new_strength)
  | ClearCriteria =>
      let new_strength = calculateStrength(password, []) in
      (password, [], new_strength)
  | AddCriterion(new_criterion) =>
      let new_criteria = new_criterion::criteria in
      let new_strength = calculateStrength(password, new_criteria) in
      (password, new_criteria, new_strength)
  | RemoveCriterion(criterion_to_remove) =>
      let new_criteria = List.filter((fun criterion -> criterion != criterion_to_remove), criteria) in
      let new_strength = calculateStrength(password, new_criteria) in
      (password, new_criteria, new_strength)
  end
in