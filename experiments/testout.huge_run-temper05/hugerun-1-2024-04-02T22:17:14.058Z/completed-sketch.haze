# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
  case action
  | PlaySong(id) => 
      let (songs, state) = playlist in
      case List.find(fun song -> song == id, songs) of
        | Some(song) => (songs, Playing(song))
        | None -> playlist
      end
  | PauseCurrentSong =>
      let (songs, state) = playlist in
      case state of
        | Playing(song) => (songs, PausedOn(song))
        | _ -> playlist
      end
  | RemoveSong(id) => 
      let (songs, state) = playlist in
      (List.filter(fun song -> song != id, songs), state)
  | AddSong(id) => 
      let (songs, state) = playlist in
      (id::songs, state)
  end
end
in