fun model, action ->
  case action
  | UpdatePassword(new_password) => let (password, criteria, strength) = model in (new_password, criteria, calculateStrength(new_password, criteria))
  | ClearCriteria => let (password, criteria, strength) = model in (password, [], calculateStrength(password, []))
  | AddCriterion(new_criterion) => let (password, criteria, strength) = model in (password, new_criterion::criteria, calculateStrength(password, new_criterion::criteria))
  | RemoveCriterion(removed_criterion) => let (password, criteria, strength) = model in (password, List.filter(fun x -> x != removed_criterion, criteria), calculateStrength(password, List.filter(fun x -> x != removed_criterion, criteria)))
  end