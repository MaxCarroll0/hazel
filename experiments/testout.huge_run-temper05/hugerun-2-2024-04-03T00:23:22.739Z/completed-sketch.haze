# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | UpdatePassword(newPassword) =>
    let newStrength = calculateStrength(newPassword, snd(model)) in
    (newPassword, snd(model), newStrength)
  | ClearCriteria =>
    let newStrength = calculateStrength(fst(model), []) in
    (fst(model), [], newStrength)
  | AddCriterion(criterion) =>
    let newCriteria = criterion :: snd(model) in
    let newStrength = calculateStrength(fst(model), newCriteria) in
    (fst(model), newCriteria, newStrength)
  | RemoveCriterion(criterion) =>
    let newCriteria = List.filter(fun c -> c != criterion, snd(model)) in
    let newStrength = calculateStrength(fst(model), newCriteria) in
    (fst(model), newCriteria, newStrength)
  end
in