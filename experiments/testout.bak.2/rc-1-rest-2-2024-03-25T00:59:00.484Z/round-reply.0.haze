
fun model, action ->
  case action
  | AddBooking(user, Weekday, TimeOfDay) => 
    let (formData, bookings, bookingId) = model in
    let newBooking = (TimeOfDay, user, bookingId) in
    (formData, newBooking::bookings, bookingId+1)
  | CancelBooking(user, id) => 
    let (formData, bookings, bookingId) = model in
    let filteredBookings = List.filter(bookings, fun booking -> case booking of (_, _, bookingId) => id != bookingId end) in
    (formData, filteredBookings, bookingId)
  | ClearBookings => 
    let (formData, _, bookingId) = model in
    (formData, [], bookingId)
  end