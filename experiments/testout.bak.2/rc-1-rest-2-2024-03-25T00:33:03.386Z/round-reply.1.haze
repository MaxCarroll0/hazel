fun (playlist, action) -> 
  case action
      | PlaySong(id) => (get_songs(playlist), Playing(id))
      | PauseCurrentSong => 
          case get_state(playlist)
              | Playing(id) => (get_songs(playlist), PausedOn(id))
              | _ => playlist
          end
      | RemoveSong(id) => 
          let new_songs = get_songs(playlist) |> List.filter (fun song_id -> song_id != id) in
          (new_songs, get_state(playlist))
      | AddSong(id) =>
          let new_songs = id :: get_songs(playlist) in
          (new_songs, get_state(playlist))
  end