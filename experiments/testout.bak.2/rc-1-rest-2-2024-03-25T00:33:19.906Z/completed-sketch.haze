# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
    let (songs, state) = playlist in
    case action
    | PlaySong(song_id) => (songs, Playing(song_id))
    | PauseCurrentSong => 
        case state
        | Playing(song_id) => (songs, PausedOn(song_id)) 
        | _ => (songs, NoSongSelected)
        end
    | RemoveSong(song_id) => 
        (List.filter(fun id -> id != song_id, songs), 
         case state
         | Playing(sid) when sid == song_id => NoSongSelected 
         | PausedOn(sid) when sid == song_id => NoSongSelected 
         | _ => state
         end)
    | AddSong(song_id) => (songs ++ [song_id], state)
    end
in