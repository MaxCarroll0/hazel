# Update the Room Booking app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | AddBooking((user, weekday, timeOfDay)) =>
    let ((_, curBookings, curId), _) = model in
      ((weekday, timeOfDay, user), curBookings @ [(weekday, timeOfDay, user, curId+1)], curId+1)
  
  | CancelBooking((user, bookingId)) =>
    let ((formData, curBookings, curId), _) = model in
      let filtered = List.filter(fun booking -> let ((_, _, _, id), _) = booking in id != bookingId, curBookings) in
        (formData, filtered, curId)
  
  | ClearBookings =>
    let ((formData, _, curId), _) = model in
      (formData, [], curId)
  end

in
