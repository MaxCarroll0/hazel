# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
  case action
  | PlaySong(songId) => (playlist[0], Playing(songId))
  | PauseCurrentSong =>
    case playlist[1]
    | Playing(songId) => (playlist[0], PausedOn(songId))
    | _ => playlist
    end
  | RemoveSong(songId) => (List.filter(fun id -> id != songId, playlist[0]), playlist[1])
  | AddSong(songId) => (songId::playlist[0], playlist[1])
  end
in