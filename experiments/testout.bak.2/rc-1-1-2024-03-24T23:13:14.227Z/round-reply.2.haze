fun (playlist, action) ->
    let (songList, state) = playlist in
    case action
    | PlaySong(id) => (songList, Playing(id))
    | PauseCurrentSong =>  (songList, case state | PausedOn(id) => PausedOn(id) | _ => NoSongSelected end)
    | RemoveSong(id) => (let rec removeId lst = 
                              case lst | [] => [] | hd::tl => if hd == id then tl else hd :: removeId(tl) end
                          in removeId(songList), state)
    | AddSong(id) => ((id::songList), state)
    end