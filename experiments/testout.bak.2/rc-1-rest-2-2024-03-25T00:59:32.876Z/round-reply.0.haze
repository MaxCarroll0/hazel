fun model, action ->
  case action
  | AddBooking(user, weekday, timeOfDay) => 
      let ((_, bookings, nextBookingID), _) = model in
      let newBooking = ((weekday, timeOfDay), user, nextBookingID) in
      ((weekday, timeOfDay, user), newBooking::bookings, nextBookingID+1)
  | CancelBooking(user, bookingID) =>
      let ((form, bookings, nextBookingID), _) = model in
      let newBookings = List.filter(fun ((_, bookingUser, id), _) -> (bookingUser != user) \/ (id != bookingID), bookings) in
      (form, newBookings, nextBookingID)
  | ClearBookings => 
      let ((form, _, nextBookingID), _) = model in
      (form, [], nextBookingID)
  end
