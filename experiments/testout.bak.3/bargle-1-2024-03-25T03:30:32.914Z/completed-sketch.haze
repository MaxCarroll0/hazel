# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (model, action) ->
    case action
    | Play(track_id) => 
        let updated_tracks = List.map
              (fun t -> if t.id == track_id then { t with is_playing = true } else { t with is_playing = false })
              (model.tracks) in
        { model with tracks = updated_tracks }
    | Pause =>
        let updated_tracks = List.map (fun t -> { t with is_playing = false }) (model.tracks) in
        { model with tracks = updated_tracks }
    | AddTrack(track) =>
        let updated_tracks = track :: model.tracks in
        { model with tracks = updated_tracks }
    | RemoveTrack(track_id) =>
        let updated_tracks = List.filter (fun t -> t.id != track_id) (model.tracks) in
        { model with tracks = updated_tracks }
    end
in