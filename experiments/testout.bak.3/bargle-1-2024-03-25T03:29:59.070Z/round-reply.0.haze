fun playlst, action ->
  case action
  | PlaySong(id) => 
      let (songs, _) = playlst in
      if List.mem(id, songs) 
      then (songs, Playing(id)) 
      else playlst
  | PauseCurrentSong => 
      let (songs, state) = playlst in
      match state 
      with Playing(id) -> (songs, PausedOn(id))
      | _ -> playlst
  | RemoveSong(id) => 
      let (songs, state) = playlst in
      (List.filter(fun song_id -> song_id != id, songs), state)
  | AddSong(id) => 
      let (songs, state) = playlst in
      (songs @ [id], state) end