fun model, action ->
  case action
  | SetPassword(new_password) => 
      let new_strength = calculateStrength(new_password, model.criteria) in
      { model with password = new_password; strength = new_strength }
  | AddCriteria(new_criteria) => 
      let new_strength = calculateStrength(model.password, new_criteria::model.criteria) in
      { model with criteria = new_criteria::model.criteria; strength = new_strength }
  | RemoveCriteria(criteria_to_remove) => 
      let new_criteria_list = List.filter(fun c -> c != criteria_to_remove, model.criteria) in
      let new_strength = calculateStrength(model.password, new_criteria_list) in
      { model with criteria = new_criteria_list; strength = new_strength } 
  | SetStrength(strength_value) =>
      { model with strength = strength_of(strength_value) }
  end