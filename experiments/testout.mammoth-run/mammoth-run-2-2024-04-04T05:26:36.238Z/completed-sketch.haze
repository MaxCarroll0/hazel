# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
  case action
  | PlaySong(id) => (get_songs(playlist), Playing(id))
  | PauseCurrentSong => (get_songs(playlist), match get_state(playlist) with | Playing(id) => PausedOn(id) | _ => get_state(playlist) end)
  | RemoveSong(id) => (List.remove(id, get_songs(playlist)), if get_state(playlist) == Playing(id) \/ get_state(playlist) == PausedOn(id) then NoSongSelected else get_state(playlist))
  | AddSong(id) => (id::get_songs(playlist), get_state(playlist))
  end
in