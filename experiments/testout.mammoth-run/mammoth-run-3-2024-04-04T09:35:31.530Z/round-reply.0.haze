
fun model, action ->
  case action
  | UpdatePassword(newPassword) => 
      let (_, criteria, _) = model in 
      let newStrength = calculateStrength(newPassword, criteria) in 
      (newPassword, criteria, newStrength)
  | ClearCriteria =>
      let (password, _, _) = model in 
      (password, [], strength_of(0))
  | AddCriterion(newCriterion) =>
      let (password, criteria, _) = model in 
      (password, newCriterion::criteria, calculateStrength(password, newCriterion::criteria))
  | RemoveCriterion(criterionToRemove) =>
      let (password, criteria, _) = model in 
      let newCriteria = List.filter(fun criterion -> criterion != criterionToRemove, criteria) in
      (password, newCriteria, calculateStrength(password, newCriteria))
  end