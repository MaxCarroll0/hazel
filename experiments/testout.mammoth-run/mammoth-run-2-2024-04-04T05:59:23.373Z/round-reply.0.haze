fun (model, action) ->
  case action
  | AddBooking((user, weekday, timeOfDay)) =>
    let (formData, bookings, bookingId) = model in
    let newBooking = ((weekday, timeOfDay), user, bookingId + 1) in
    (formData, newBooking::bookings, bookingId + 1)
  | CancelBooking((user, id)) =>
    let (formData, bookings, bookingId) = model in
    let updatedBookings = List.filter(fun ((_, bookedUser, bookedId)) -> bookedUser != user \/ bookedId != id, bookings) in
    (formData, updatedBookings, bookingId)
  | ClearBookings => 
    let (formData, _, bookingId) = model in
    (formData, [], bookingId)
  end