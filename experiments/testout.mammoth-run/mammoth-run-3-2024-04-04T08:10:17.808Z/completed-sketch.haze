# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) ->
    case action
    | PlaySong(id) => (playlist[0], Playing(id))
    | PauseCurrentSong => (playlist[0], case playlist[1] of Playing(id) => PausedOn(id) | _ => playlist[1] end)
    | RemoveSong(id) => (List.filter(fun song -> song != id, playlist[0]), playlist[1])
    | AddSong(id) => (id :: playlist[0], playlist[1])
    end
in