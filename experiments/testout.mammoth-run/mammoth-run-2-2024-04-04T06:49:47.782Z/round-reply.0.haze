
fun model, action ->
  case action
    | UpdatePassword(password) =>
      let (_, criteria, _) = model in
      let new_strength = calculateStrength(password, criteria) in
      (password, criteria, new_strength)
    | ClearCriteria =>
      let (password, _, _) = model in
      (password, [], Weak)
    | AddCriterion(criterion) =>
      let (password, criteria, _) = model in
      let new_criteria = criterion::criteria in
      let new_strength = calculateStrength(password, new_criteria) in
      (password, new_criteria, new_strength)
    | RemoveCriterion(criterion) =>
      let (password, criteria, _) = model in
      let new_criteria = List.filter(fun c -> c != criterion, criteria) in
      let new_strength = calculateStrength(password, new_criteria) in
      (password, new_criteria, new_strength)
  end