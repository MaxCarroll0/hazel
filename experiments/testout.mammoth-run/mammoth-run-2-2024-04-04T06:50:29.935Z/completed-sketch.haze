# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | UpdatePassword(new_password) =>
    let new_strength = calculateStrength(new_password, model.criteria) in
    (new_password, model.criteria, new_strength)
  | ClearCriteria =>
    (model.password, [], Weak)
  | AddCriterion(new_criterion) =>
    let new_criteria = new_criterion :: model.criteria in
    let new_strength = calculateStrength(model.password, new_criteria) in
    (model.password, new_criteria, new_strength)
  | RemoveCriterion(criterion_to_remove) =>
    let new_criteria = List.filter(fun criterion -> criterion != criterion_to_remove, model.criteria) in
    let new_strength = calculateStrength(model.password, new_criteria) in
    (model.password, new_criteria, new_strength)
  end
in