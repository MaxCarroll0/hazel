# Update the Room Booking app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | AddBooking((user, weekday, time_of_day)) => 
    let (booking_form_data, bookings, booking_id) = model in
    let new_booking = ((weekday, time_of_day), user, booking_id) in
    let new_bookings = new_booking::bookings in
    let new_booking_id = booking_id + 1 in
    (booking_form_data, new_bookings, new_booking_id)
  | CancelBooking((user, id)) =>
    let (booking_form_data, bookings, booking_id) = model in
    let new_bookings = List.filter(fun ((_, booked_user, booked_id)) -> booked_user != user \/ booked_id != id, bookings) in
    (booking_form_data, new_bookings, booking_id)
  | ClearBookings =>
    let (booking_form_data, _, booking_id) = model in
    (booking_form_data, [], booking_id)
  end
in
