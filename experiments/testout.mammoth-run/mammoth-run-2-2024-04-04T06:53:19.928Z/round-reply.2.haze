fun (model, action) ->
  case action 
  | SetPassword(new_password) => 
    let strength = calculateStrength(new_password, model.criteria) in
    { model with password = new_password; strength = strength }
  | AddCriteria(new_criteria) => 
    let updated_criteria = new_criteria :: model.criteria in
    let strength = calculateStrength(model.password, updated_criteria) in
    { model with criteria = updated_criteria; strength = strength }
  | RemoveCriteria(criteria_to_remove) => 
    let updated_criteria = List.filter((fun c -> c != criteria_to_remove), model.criteria) in
    let strength = calculateStrength(model.password, updated_criteria) in
    { model with criteria = updated_criteria; strength = strength }
  | SetStrengthLevel(new_level) => 
    { model with strength = strength_of(new_level) }
  end