# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (songs, state), action ->
    case action
    | PlaySong(id) => (songs, Playing(id))
    | PauseCurrentSong => 
        case state
        | Playing(id) => (songs, PausedOn(id))
        | _ => (songs, state)
        end
    | RemoveSong(id) => (List.filter(fun song -> song != id, songs), state)
    | AddSong(id) => 
        if List.mem(id, songs) 
        then (songs, state) 
        else (id::songs, state)
        end
    end
in