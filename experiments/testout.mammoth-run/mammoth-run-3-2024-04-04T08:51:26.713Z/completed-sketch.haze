# Update the Room Booking app model based on an action #

let update: (Model, Action) -> Model =
  
fun model, action ->
  case action
    | AddRoom(name, capacity) => 
        let new_room = {name = name; capacity = capacity; bookings = []} in
        {model with rooms = new_room :: model.rooms}
    | BookRoom(name, date, duration) => 
        let room = List.find(fun r -> r.name = name, model.rooms) in
        let new_booking = {date = date; duration = duration} in
        let updated_room = {room with bookings = new_booking :: room.bookings} in
        {model with rooms = updated_room :: List.remove(room, model.rooms)}
    | DeleteRoom(name) => 
        {model with rooms = List.remove_by(fun r -> r.name = name, model.rooms)}
    | UpdateCapacity(name, new_capacity) => 
        let room = List.find(fun r -> r.name = name, model.rooms) in
        let updated_room = {room with capacity = new_capacity} in
        {model with rooms = updated_room :: List.remove(room, model.rooms)}
  end
in
