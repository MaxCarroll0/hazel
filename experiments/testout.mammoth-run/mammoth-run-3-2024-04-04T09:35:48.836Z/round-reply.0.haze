
fun (model, action) ->
  case action
  | UpdatePassword(password) =>
      let strength = calculateStrength(password, snd(model)) in
      (password, snd(model), strength)
  | ClearCriteria =>
      (fst(model), [], Weak)
  | AddCriterion(criterion) =>
      let newCriteria = snd(model) @ [criterion] in
      let strength = calculateStrength(fst(model), newCriteria) in
      (fst(model), newCriteria, strength)
  | RemoveCriterion(criterion) =>
      let newCriteria = List.filter(fun c -> c != criterion, snd(model)) in
      let strength = calculateStrength(fst(model), newCriteria) in
      (fst(model), newCriteria, strength)
  end