# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun (playlist, action) -> 
  case action
  | PlaySong(id) => (get_songs(playlist), Playing(id))
  | PauseCurrentSong => 
      case get_state(playlist) 
      | Playing(id) => (get_songs(playlist), PausedOn(id))
      | _ => playlist
      end
  | RemoveSong(id) => (List.filter((fun song_id -> song_id != id), get_songs(playlist)), get_state(playlist))
  | AddSong(id) => (id::get_songs(playlist), get_state(playlist))
  end
in