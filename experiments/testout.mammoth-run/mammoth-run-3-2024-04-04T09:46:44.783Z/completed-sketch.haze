# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (password, criteria, strength), action ->
    let check_strength = fun password, criteria -> ?? in
    case action
    | UpdatePassword(new_password) => (new_password, criteria, check_strength(new_password, criteria))
    | ClearCriteria => (password, [], Weak)
    | AddCriterion(new_criterion) => (password, new_criterion :: criteria, check_strength(password, new_criterion :: criteria))
    | RemoveCriterion(criterion_to_remove) => 
        let new_criteria = List.filter(fun c -> c != criterion_to_remove, criteria) in
        (password, new_criteria, check_strength(password, new_criteria))
    end
in