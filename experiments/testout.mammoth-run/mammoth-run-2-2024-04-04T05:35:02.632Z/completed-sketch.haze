# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  
fun pl, action ->
    case action
    | PlaySong(id) => (fst(pl), Playing(id))
    | PauseCurrentSong => (fst(pl), case snd(pl) of | Playing(id) => PausedOn(id) | _ => snd(pl) end)
    | RemoveSong(id) => (List.filter(fun song -> song != id, fst(pl)), snd(pl))
    | AddSong(id) => (id::fst(pl), snd(pl))
    end
in