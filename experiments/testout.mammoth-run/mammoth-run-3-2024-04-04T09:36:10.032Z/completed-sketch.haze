# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action of
  | UpdatePassword(new_password) =>
    let new_strength = calculateStrength(new_password, snd(model)) in
    (new_password, snd(model), new_strength)
  | ClearCriteria =>
    let new_strength = calculateStrength(fst(model), []) in
    (fst(model), [], new_strength)
  | AddCriterion(criteria) =>
    let new_criteria = criteria :: snd(model) in
    let new_strength = calculateStrength(fst(model), new_criteria) in
    (fst(model), new_criteria, new_strength)
  | RemoveCriterion(criteria) =>
    let new_criteria = List.filter((!=)criteria, snd(model)) in
    let new_strength = calculateStrength(fst(model), new_criteria) in
    (fst(model), new_criteria, new_strength)
  end
in