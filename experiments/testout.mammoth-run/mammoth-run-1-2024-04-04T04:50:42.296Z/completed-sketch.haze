# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | ChangePassword(password) =>
    let newStrength = calculateStrength(password, model.criteria) in
    { model with password = password, strength = newStrength }
  | AddCriteria(criteria) =>
    let newStrength = calculateStrength(model.password, criteria::model.criteria) in
    { model with criteria = criteria::model.criteria, strength = newStrength }
  | RemoveCriteria(criteria) =>
    let newCriteria = List.filter((fun c -> c != criteria), model.criteria) in
    let newStrength = calculateStrength(model.password, newCriteria) in
    { model with criteria = newCriteria, strength = newStrength }
  | SetStrength(strength) =>
    { model with strength = strength_of(strength) }
  end
in