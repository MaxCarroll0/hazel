# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
    | UpdatePassword(new_password) => 
        let (password, criteria, _) = model in 
        (new_password, criteria, calculateStrength(new_password, criteria))
    | ClearCriteria =>
        let (password, _, _) = model in 
        (password, [], Weak)
    | AddCriterion(new_criterion) =>
        let (password, criteria, _) = model in 
        (password, new_criterion::criteria, calculateStrength(password, new_criterion::criteria))
    | RemoveCriterion(criterion_to_remove) =>
        let (password, criteria, _) = model in 
        let new_criteria = List.filter(fun c -> c != criterion_to_remove, criteria) in
        (password, new_criteria, calculateStrength(password, new_criteria))
  end
in