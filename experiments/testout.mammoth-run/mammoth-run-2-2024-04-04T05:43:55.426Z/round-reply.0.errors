The following static errors were discovered:
Error in term:
  case action
 | AddBooking((user, weekday, time)) => if bookingExists(model, (time, user, getNewID(model))) then model else let ((formState, bookings, id)) = model in
 ((M, AM), , (time, user, id) :: bookings, id + 1)
| RemoveBooking(id) => let ((formState, bookings, newID)) = model in
 ((M, AM), , List.filter(fun ((_, _, i : BookingID)) ->
 i != id, bookings), newID)
| UpdateForm(newForm) => let ((_, bookings, newID)) = model in
 (newForm, bookings, newID)
end
Nature of error: Expecting branches to have consistent types but got types: ((Weekday, TimeOfDay), String, [(TimeOfDay, User, ?)], Int), ((Weekday, TimeOfDay), String, [?], ?), (?, ?, ?)
Error in term:
  time
Nature of error: Expecting type Time but got inconsistent type TimeOfDay
Error in term:
  getNewID
Nature of error: Variable getNewID is not bound
Error in term:
  RemoveBooking
Nature of error: Constructor is not defined
Error in term:
  UpdateForm
Nature of error: Constructor is not defined
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion