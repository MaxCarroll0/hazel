The following static errors were discovered:
Error in term:
  and
Nature of error: Variable and is not bound
Error in term:
  Todo
Nature of error: Constructor is not defined
Error in term:
  List.drop
Nature of error: Variable List.drop is not bound
Error in term:
  Todo
Nature of error: Constructor is not defined
Error in term:
  where
Nature of error: Variable where is not bound
Error in term:
  List.take
Nature of error: Variable List.take is not bound
Error in term:
  Int
Nature of error: Constructor is not defined
Error in term:
  Todo
Nature of error: Constructor is not defined
Error in term:
  fun (((buffer, todos)), action) ->
 case action
 | AddTodo => (buffer, (buffer, false) :: todos)
| RemoveTodo(idx) => (buffer, remove_at(idx, todos))
| ToggleTodo(idx) => (buffer, update_at(idx, fun ((todo, done)) ->
 (todo, !done), todos))
| UpdateBuffer(str) => (str, todos)
end where remove_at : (Int, Todo -> Todo fun (idx, todos) ->
 List.take(idx, todos) @ List.drop(idx + 1, todos)) and update_at : (Int, (Todo Todo), Todo -> Todo fun (idx, f, todos) ->
 List.mapi(fun (i, todo) ->
 if i == idx then f(todo) else todo, todos))
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  remove_at
Nature of error: Variable remove_at is not bound
Error in term:
  update_at
Nature of error: Variable update_at is not bound
Error in term:
  Todo Todo
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  remove_at : (Int, Todo -> Todo fun (idx, todos) ->
 List.take(idx, todos) @ List.drop(idx + 1, todos)) and update_at : (Int, (Todo Todo), Todo -> Todo fun (idx, f, todos) ->
 List.mapi(fun (i, todo) ->
 if i == idx then f(todo) else todo, todos))
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  Todo
Nature of error: Constructor is not defined
Error in term:
  Int
Nature of error: Constructor is not defined
Error in term:
  where remove_at : (Int, Todo -> Todo fun (idx, todos) ->
 List.take(idx, todos) @ List.drop(idx + 1, todos)) and update_at : (Int, (Todo Todo), Todo -> Todo fun (idx, f, todos) ->
 List.mapi(fun (i, todo) ->
 if i == idx then f(todo) else todo, todos))
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  and update_at : (Int, (Todo Todo), Todo -> Todo fun (idx, f, todos) ->
 List.mapi(fun (i, todo) ->
 if i == idx then f(todo) else todo, todos))
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion