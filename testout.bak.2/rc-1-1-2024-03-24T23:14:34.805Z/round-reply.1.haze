fun model, action ->
    case action
    | AddBooking(user, weekday, timeOfDay) =>
        let (formData, bookings, nextId) = model in
        let newBooking = ((weekday, timeOfDay), user, nextId) in
        ((weekday, timeOfDay), user, nextId+1), newBooking::bookings, nextId+1
    | CancelBooking(user, id) =>
        let (formData, bookings, nextId) = model in
        let updatedBookings = List.foldl(fun ((t, bookingUser, bookingId), acc) -> if bookingUser != user && bookingId != id then ((t, bookingUser, bookingId)::acc) else acc, [], bookings) in
        formData, updatedBookings, nextId
    | ClearBookings =>
        let (formData, _, nextId) = model in
        formData, [], nextId
    end