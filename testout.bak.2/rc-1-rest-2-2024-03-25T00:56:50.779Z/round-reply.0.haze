fun m, a ->
    case a
    | AddBooking(user, day, time) =>
      let (booking_form_data, bookings, last_id) = m in
      let new_id = last_id + 1 in
      let new_booking = ((day, time), user, new_id) in
      let updated_bookings = new_booking :: bookings in
      ((day, time), updated_bookings, new_id)
    | CancelBooking(user, id_to_cancel) =>
      let (booking_form_data, bookings, last_id) = m in
      let updated_bookings = List.filter(fun (time, user, id) -> id != id_to_cancel, bookings) in
      (booking_form_data, updated_bookings, last_id)
    | ClearBookings => ((M, AM), [], 0)
    end
in