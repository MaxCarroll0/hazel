# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  fun playlist, action ->
  case action
  | PlaySong(id) => (get_songs(playlist), Playing(id))
  | PauseCurrentSong =>
      case get_state(playlist)
      | Playing(id) => (get_songs(playlist), PausedOn(id))
      | _ => playlist
      end
  | RemoveSong(id) =>
      let songs = List.filter((!=) id, get_songs(playlist)) in 
      (songs, get_state(playlist))
  | AddSong(id) =>
      let songs = id :: get_songs(playlist) in 
      (songs, get_state(playlist))
  end
in