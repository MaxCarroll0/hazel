The following static errors were discovered:
Error in term:
  case action
 | AddBooking((user, weekday, timeOfDay)) => let ((((_, bookings, id)), _)) = model in
 let new_id = id + 1 in
 ((weekday, timeOfDay, user), new_id :: bookings, new_id)
| CancelBooking((user, id)) => let ((((_, bookings, _)), _)) = model in
 let new_bookings = List.filter(fun (((_, user1, id1))) ->
 not(user1 == user && id1 == id), bookings) in
 (new_bookings, id)
| ClearBookings => let ((formData, _, id)) = model in
 (formData, , id)
end
Nature of error: Expecting branches to have consistent types but got types: ((Weekday, TimeOfDay, User), [Int], Int), (?, Int), (?, [?], ?)
Error in term:
  not
Nature of error: Variable not is not bound
Error in term:
  List.filter
Nature of error: Variable List.filter is not bound
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion