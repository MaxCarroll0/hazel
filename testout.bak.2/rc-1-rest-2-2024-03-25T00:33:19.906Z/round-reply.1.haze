fun (playlist, action) ->
    case action
    | PlaySong(song_id) => (get_songs(playlist), Playing(song_id))
    | PauseCurrentSong => 
        (get_songs(playlist), 
         case get_state(playlist) 
         | Playing(song_id) => PausedOn(song_id) 
         | _ => NoSongSelected
         end)
    | RemoveSong(song_id) => 
        (List.filter(fun id -> id != song_id, get_songs(playlist)), 
         case get_state(playlist) 
         | Playing(removed_id) when song_id == removed_id => NoSongSelected 
         | PausedOn(removed_id) when song_id == removed_id => NoSongSelected 
         | _ => get_state(playlist)
         end)
    | AddSong(song_id) => (get_songs(playlist) ++ [song_id], get_state(playlist))
    end