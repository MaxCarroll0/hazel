fun (model, action) -> 
    case action 
    | AddBooking((user, weekday, timeOfDay)) => 
        let (formData, bookings, nextId) = model in
        let newBooking = ((weekday, timeOfDay), user, nextId) in
        let updatedBookings = newBooking::bookings in
        let updatedModel = (formData, updatedBookings, nextId + 1) in
        updatedModel
    | CancelBooking((user, bookingId)) =>
        let (formData, bookings, _) = model in
        let updatedBookings = filter_bookings(fun ((_, bookingUser, id)) -> id != bookingId && bookingUser != user, bookings) in
        let updatedModel = (formData, updatedBookings, nextId) in
        updatedModel
    | ClearBookings =>
        let (formData, _, bookingId) = model in
        let updatedModel = (formData, [], bookingId) in
        updatedModel
    end