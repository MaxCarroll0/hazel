fun (mod, act) ->
  case act 
  | AddBooking(user, weekday, timeOfDay) => 
     let newBookingId = mod.2 + 1 in
     let newBooking = ((weekday, timeOfDay), user, newBookingId) in
     (mod.1, newBooking :: mod.2, newBookingId)
  | CancelBooking(user, bookingId) => 
     let newBookingList = List.filter((fun (_, _, id) -> id != bookingId), mod.2) in
     (mod.1, newBookingList, mod.3)
  | ClearBookings => (mod.1, [], mod.3)
  end