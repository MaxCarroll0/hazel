// 3x no ctx

let update: (Model, Action) -> Model =
  fun model, action ->
  case action
  | AddTodo =>
    let (buffer, todos) = model in
    if buffer != "" then
      ("" , (buffer, false)::todos)
    else
      model
  | RemoveTodo(idx) =>
    let (buffer, todos) = model in
    (buffer, List.filteri((fun i, _ -> i != idx), todos))
  | ToggleTodo(idx) =>
    let (buffer, todos) = model in
    (buffer, List.mapi(fun i, (text, done) -> if i == idx then (text, !done) else (text, done),todos))
  | UpdateBuffer(text) =>
    let (buffer, todos) = model in
    (text, todos)
  end
in

let update: (Model, Action) -> Model =
  fun model, action ->
  case action
    | AddTodo =>
      let (buffer, todos) = model in
      if buffer == "" then model
      else ("", (buffer, false)::todos)
    | RemoveTodo(idx) =>
      let (buffer, todos) = model in
      let new_todos = List.filteri(fun i, _ -> i != idx, todos) in
      (buffer, new_todos)
    | ToggleTodo(idx) =>
      let (buffer, todos) = model in
      let new_todos = List.mapi(fun i, (name, done) ->
        if i == idx then (name, !done) else (name, done), todos) in
      (buffer, new_todos)
    | UpdateBuffer(new_buffer) =>
      let (_, todos) = model in
      (new_buffer, todos)
  end
in

let update: (Model, Action) -> Model =
  fun model, action ->
  case action
  | AddTodo =>
    let (buffer, todos) = model in
    if buffer == "" then model else ("", (buffer, false)::todos)
  | RemoveTodo(idx) =>
    let (buffer, todos) = model in
    (buffer, List.filteri(fun i, _ -> i != idx, todos))
  | ToggleTodo(idx) =>
    let (buffer, todos) = model in
    (buffer, List.mapi(fun i, (todo, done) -> if i == idx then (todo, !done) else (todo, done), todos))
  | UpdateBuffer(str) =>
    let (buffer, todos) = model in
    (str, todos)
  end
in

// 1x yes ctx

let update: (Model, Action) -> Model =
  fun (buffer, todos), action ->
  case action
    | AddTodo => ("", add(buffer, todos))
    | RemoveTodo(idx) => (buffer, remove(idx, todos))
    | ToggleTodo(idx) => (buffer, toggle(idx, todos))
    | UpdateBuffer(str) => (str, todos)
  end
in