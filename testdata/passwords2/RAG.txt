# SNIPPET 1 #
, ts2) in

let Model.init: Model = ("", []) in

type Action =
  + AddTodo
  + RemoveTodo(Int)
  + ToggleTodo(Int)
  + UpdateBuffer(String) in

let eq 

# SNIPPET 2 #
pe Criteria = [PasswordCriteria] in
type Strength = PasswordStrength in
  
type Model = (Password, Criteria, Strength) in
  
let initialModel: Model =

# SNIPPET 3 #
ngth(Int)
  + RequireNumber
  + RequireSpecialChar in

type PasswordStrength =
  + Weak
  + Moderate
  + Strong in
      
type Password = String in
ty

# SNIPPET 4 #
 a todo list #
type Model = (String, [Todo]) in

type Update = (Model, Action) -> Model in

let Todo.eq: (Todo, Todo) -> Bool =
  fun (d1, s1), (d2, s

# SNIPPET 5 #
riterion(password, c),
      criteria
    ) in
    
let strength_of: Int -> PasswordStrength =
  fun num_criteria_met ->
    case num_criteria_met
   

# SNIPPET 6 #
 (
  "",
  [
    MinimumLength(8),
    RequireUppercase,
    RequireLowercase,
    RequireNumber,
    RequireSpecialChar
  ],
  Weak
) in

type Action

