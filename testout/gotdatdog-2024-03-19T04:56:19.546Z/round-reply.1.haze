fun (model, action) ->
  case action
  | AddBooking(user, weekday, timeOfDay) => 
    let newBooking = ((weekday, timeOfDay), user, model.BookingID + 1) in 
    (model.BookingFormData, newBooking::model[Booking], model.BookingID + 1)
  | CancelBooking(user, bookingID) =>
    let remainingBookings = List.filter((fun (_, _, id) -> id != bookingID), model[Booking]) in 
    (model.BookingFormData, remainingBookings, model.BookingID)
  | ClearBookings => 
    (model.BookingFormData, [], model.BookingID)
  | ClearRange(timeStart, timeEnd) =>
    let remainingBookings = List.filter((fun (time, _, _) -> weekdayIndex(time) < weekdayIndex(timeStart) || weekdayIndex(time) > weekdayIndex(timeEnd)), model[Booking]) in
    (model.BookingFormData, remainingBookings, model.BookingID)
  end