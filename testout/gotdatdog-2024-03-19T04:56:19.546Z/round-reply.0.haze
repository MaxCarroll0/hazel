
fun model, action ->
  case action
  | AddBooking((user, weekday, timeOfDay)) =>
    let newBooking = (weekday, timeOfDay), user, model.BookingID + 1 in
    (model.BookingFormData, model[Booking]::newBooking, model.BookingID + 1)
  | CancelBooking((user, bookingID)) =>
    let remainingBookings = List.filter((fun booking -> booking.BookingID != bookingID), model[Booking]) in
    (model.BookingFormData, remainingBookings, model.BookingID)
  | ClearBookings => 
    (model.BookingFormData, [], model.BookingID)
  | ClearRange((timeStart, timeEnd)) =>
    let remainingBookings = List.filter((fun booking -> weekdayIndex(booking.Time) < weekdayIndex(timeStart) || weekdayIndex(booking.Time) > weekdayIndex(timeEnd)), model[Booking]) in
    (model.BookingFormData, remainingBookings, model.BookingID)
  end