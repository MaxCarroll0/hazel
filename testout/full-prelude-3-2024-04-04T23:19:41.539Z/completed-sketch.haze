# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun model, action ->
  case action
  | UpdatePassword(password) =>
    let (_, criteria, _) = model in
    (password, criteria, calculateStrength(password, criteria))
  | ClearCriteria =>
    let (password, _, _) = model in
    (password, [], Weak)
  | AddCriterion(criterion) =>
    let (password, criteria, _) = model in
    let newCriteria = criterion :: criteria in
    (password, newCriteria, calculateStrength(password, newCriteria))
  | RemoveCriterion(criterion) =>
    let (password, criteria, _) = model in
    let newCriteria = List.filter(fun c -> c != criterion, criteria) in
    (password, newCriteria, calculateStrength(password, newCriteria))
  end
in