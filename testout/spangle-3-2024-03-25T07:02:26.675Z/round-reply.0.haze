fun model, action ->
  case action
  | ChangePassword(new_password) => 
      let password = string_trim(new_password) in
      let updated_criteria = List.map((fun criterion -> matchCriterion(criterion, password)) , model.criteria) in
      let strength = calculateStrength(password, updated_criteria) in
      Model(updated_criteria, password, strength)
  | AddCriterion(new_criterion) =>
      let updated_criteria = new_criterion::model.criteria in
      let strength = calculateStrength(model.password, updated_criteria) in
      Model(updated_criteria, model.password, strength)
  | RemoveCriterion(criterion_to_remove) =>
      let updated_criteria = List.filter((fun criterion -> criterion != criterion_to_remove), model.criteria) in
      let strength = calculateStrength(model.password, updated_criteria) in
      Model(updated_criteria, model.password, strength)
  end