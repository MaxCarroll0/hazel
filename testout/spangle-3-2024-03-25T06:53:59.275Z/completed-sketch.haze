# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (m, a) -> 
  case a
  | UpdatePassword(p) => (p, m._2, evaluate_strength(p, m._2))
  | ClearCriteria => (m._1,[],Weak)
  | AddCriterion(c) => (m._1, c::m._2, evaluate_strength(m._1, c::m._2)) 
  | RemoveCriterion(c) => let new_criteria = List.filter((fun x -> x != c), m._2) in (m._1, new_criteria, evaluate_strength(m._1, new_criteria))
  end
where 
evaluate_strength = fun (p, c) -> 
  if List.length(c) = 0 then Weak 
  else if List.for_all(check_criterion(p), c) then Strong 
  else Moderate, 

check_criterion = fun (p) ->
  | RequireUppercase => String.exists(isUppercase, p)
  | RequireLowercase => String.exists(isLowercase, p)
  | MinimumLength(l) => String.length(p) >= l
  | RequireNumber => String.exists(isDigit, p)
  | RequireSpecialChar => String.exists(isSpecial, p)
  end
in
in