
fun model,action ->
  case action
  | UpdatePassword(new_password) =>
    let (password, criteria, strength) = model in
    let new_strength = calculateStrength(new_password,criteria) in
    (new_password, criteria, new_strength)
  | ClearCriteria =>
    let (password, _, strength) = model in
    (password, [], strength)
  | AddCriterion(new_criterion) =>
    let (password, criteria, strength) = model in
    let new_strength = calculateStrength(password,[new_criterion]::criteria) in
    (password, [new_criterion]::criteria, new_strength)
  | RemoveCriterion(to_remove) =>
    let (password, criteria, strength) = model in
    let new_criteria = List.filter((fun criterion -> criterion != to_remove),criteria) in
    let new_strength = calculateStrength(password, new_criteria) in
    (password, new_criteria, new_strength)
  end
