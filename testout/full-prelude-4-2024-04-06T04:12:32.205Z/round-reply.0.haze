fun model, action ->
  case action
  | UpdatePassword(new_password) => 
      let (_, criteria, _) = model in
      (new_password, criteria, calculateStrength(new_password, criteria))
  | ClearCriteria =>
      let (password, _, _) = model in
      (password, [], Weak)
  | AddCriterion(new_criterion) =>
      let (password, criteria, _) = model in
      let updated_criteria = new_criterion :: criteria in
      (password, updated_criteria, calculateStrength(password, updated_criteria))
  | RemoveCriterion(criterion_to_remove) =>
      let (password, criteria, _) = model in
      let updated_criteria = List.filter(
        fun c -> c != criterion_to_remove,
        criteria
      ) in
      (password, updated_criteria, calculateStrength(password, updated_criteria))
  end