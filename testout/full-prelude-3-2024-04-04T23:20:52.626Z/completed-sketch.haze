# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun model, action ->
  let (password, criteria, strength) = model in
  case action
  | UpdatePassword(newPassword) =>
      let newStrength = calculateStrength(newPassword, criteria) in
      (newPassword, criteria, newStrength)
  | ClearCriteria => (password, [], Weak)
  | AddCriterion(newCriterion) => 
      let newCriteria = newCriterion :: criteria in
      let newStrength = calculateStrength(password, newCriteria) in
      (password, newCriteria, newStrength)
  | RemoveCriterion(criterionToRemove) => 
      let newCriteria = List.filter(fun c -> c != criterionToRemove, criteria) in
      let newStrength = calculateStrength(password, newCriteria) in
      (password, newCriteria, newStrength)
  end
in