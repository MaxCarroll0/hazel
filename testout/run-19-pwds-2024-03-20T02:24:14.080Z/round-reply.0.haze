fun m, o ->
    case o
    | UpdatePassword(p) => 
        let new_strength = calculateStrength(p, fst(snd(m))) in
        (p, snd(m), new_strength)
    | ClearCriteria => 
        (fst(m), [], Weak)
    | AddCriterion(c) => 
        let new_strength = calculateStrength(fst(m), [c]@fst(snd(m))) in
        (fst(m), ([c]@fst(snd(m)), snd(snd(m))), new_strength)
    | RemoveCriterion(c) => 
        let new_criteria = List.filter(fun crit -> crit != c, fst(snd(m))) in
        let new_strength = calculateStrength(fst(m), new_criteria) in
        (fst(m), (new_criteria, snd(snd(m))), new_strength)
    end