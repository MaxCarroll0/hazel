fun model, action ->
  case action
    | Create(room) => {model with rooms = room :: model.rooms}
    | Delete(room) => {model with rooms = List.filter((fun r -> r != room), model.rooms)}
    | Book(room, user) => 
        let new_rooms = List.map((fun r -> if r == room then {r with booked = Some(user)} else r), model.rooms) in
        {model with rooms = new_rooms}
    | Cancel(room) => 
        let new_rooms = List.map((fun r -> if r == room then {r with booked = None} else r), model.rooms) in
        {model with rooms = new_rooms} 
  end