fun model, action ->
  case action
  | UpdatePassword(password) =>
    let (old_password, criteria, _) = model in
    let new_strength = calculateStrength(password, criteria) in
    (password, criteria, new_strength)
  | ClearCriteria =>
    let (password, _, _) = model in
    let new_strength = Weak in
    (password, [], new_strength)
  | AddCriterion(criterion) =>
    let (password, criteria, _) = model in
    let new_criteria = criterion :: criteria in
    let new_strength = calculateStrength(password, new_criteria) in
    (password, new_criteria, new_strength)
  | RemoveCriterion(criterion) =>
    let (password, criteria, strength) = model in
    let new_criteria = List.remove(criterion, criteria) in
    let new_strength = calculateStrength(password, new_criteria) in
    (password, new_criteria, new_strength)
  end