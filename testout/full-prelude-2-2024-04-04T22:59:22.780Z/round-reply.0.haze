fun model, action ->
  case action
  | UpdatePassword(new_password) =>
    let new_strength = calculateStrength(new_password, model.1) in
    (new_password, model.1, new_strength)
  | ClearCriteria =>
    (model.0, [], Weak)
  | AddCriterion(criterion) =>
    let new_criteria = criterion :: model.1 in
    let new_strength = calculateStrength(model.0, new_criteria) in
    (model.0, new_criteria, new_strength)
  | RemoveCriterion(criterion) =>
    let new_criteria = List.filter(
      fun c -> c != criterion,
      model.1
    ) in
    let new_strength = calculateStrength(model.0, new_criteria) in
    (model.0, new_criteria, new_strength)
  end