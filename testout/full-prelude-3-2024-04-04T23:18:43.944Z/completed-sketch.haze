# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun model, action ->
  case action
  | UpdatePassword(new_password) =>
    let (old_password, criteria, _) = model in
    (new_password, criteria, calculateStrength(new_password, criteria))
  | ClearCriteria =>
    let (password, _, _) = model in
    (password, [], Weak)
  | AddCriterion(new_criterion) =>
    let (password, old_criteria, _) = model in
    let new_criteria = new_criterion :: old_criteria in
    (password, new_criteria, calculateStrength(password, new_criteria))
  | RemoveCriterion(criterion_to_remove) =>
    let (password, old_criteria, _) = model in
    let new_criteria = List.filter(fun c -> c != criterion_to_remove, old_criteria) in
    (password, new_criteria, calculateStrength(password, new_criteria))
  end
in