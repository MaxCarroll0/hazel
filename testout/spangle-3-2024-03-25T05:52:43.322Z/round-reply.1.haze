fun (playlist, state), action ->
  case action
  | PlaySong(id) => (playlist, Playing(id))
  | PauseCurrentSong =>
    let (_, state) = model in
    case state
    | Playing(id) => (playlist, PausedOn(id))
    | _ => model
    end
  | RemoveSong(id) => (List.filter(fun x -> x != id, playlist), state)
  | AddSong(id) => (id::playlist, state)
  end