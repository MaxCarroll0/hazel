# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  
fun model, action ->
  let (pwd, criteria, _strength) = model in
  case action
    | UpdatePassword(new_password) => 
      let new_strength = calculateStrength(new_password, criteria) in
      (new_password, criteria, new_strength)
    | ClearCriteria =>
      let new_strength = calculateStrength("", []) in
      ("", [], new_strength)
    | AddCriterion(criterion) => 
      let new_criteria = criterion :: criteria in
      let new_strength = calculateStrength(pwd, new_criteria) in
      (pwd, new_criteria, new_strength)      
    | RemoveCriterion(criterion) => 
      let new_criteria = List.filter(fun c -> c !== criterion, criteria) in
      let new_strength = calculateStrength(pwd, new_criteria) in
      (pwd, new_criteria, new_strength)
    end
in