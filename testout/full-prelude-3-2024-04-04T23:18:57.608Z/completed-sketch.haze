# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun (model, action) ->
  case action
  | UpdatePassword(password) =>
    let (oldPassword, criteria, oldStrength) = model in
    let newStrength = calculateStrength(password, criteria) in
    (password, criteria, newStrength)
  | ClearCriteria =>
    let (password, oldCriteria, oldStrength) = model in
    let newStrength = calculateStrength(password, []) in
    (password, [], newStrength)
  | AddCriterion(criterion) =>
    let (password, oldCriteria, oldStrength) = model in
    let newCriteria = oldCriteria@[criterion] in
    let newStrength = calculateStrength(password, newCriteria) in
    (password, newCriteria, newStrength)
  | RemoveCriterion(criterion) =>
    let (password, oldCriteria, oldStrength) = model in
    let newCriteria = List.filter(fun c -> c != criterion, oldCriteria) in
    let newStrength = calculateStrength(password, newCriteria) in
    (password, newCriteria, newStrength)
  end
in