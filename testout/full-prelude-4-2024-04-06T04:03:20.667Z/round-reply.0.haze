
fun playlist, action ->
  let songs, state = playlist in
  case action
  | PlaySong(id) => (songs, Playing(id))
  | PauseCurrentSong => 
    (songs, 
     case state
     | Playing(id) => PausedOn(id)
     | _ => state
     end)
  | RemoveSong(id) => 
    (List.filter(fun song_id -> song_id != id, songs), 
     case state
     | Playing(curr_id) => if curr_id == id then NoSongSelected else state end
     | PausedOn(curr_id) => if curr_id == id then NoSongSelected else state end
     | _ => state
     end)
  | AddSong(id) => if List.contains(id, songs) then playlist else (id::songs, state)
  end
