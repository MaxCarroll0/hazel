fun m, a ->
  case a
    | UpdatePassword(n) =>
        let newStrength = calculateStrength(n, m.Credentials) in
        {m with Password = n, Strength = newStrength}
    | ClearCriteria =>
        let newStrength = calculateStrength(m.Password, []) in
        {m with Criteria = [], Strength = newStrength}
    | AddCriterion(c) =>
        let newCriteria = c::m.Criteria in
        let newStrength = calculateStrength(m.Password, newCriteria) in
        {m with Criteria = newCriteria, Strength = newStrength}
    | RemoveCriterion(c) =>
        let newCriteria = List.filter(fun x -> x != c, m.Criteria) in
        let newStrength = calculateStrength(m.Password, newCriteria) in
        {m with Criteria = newCriteria, Strength = newStrength}
  end
