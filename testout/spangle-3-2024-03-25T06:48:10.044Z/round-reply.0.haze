fun model, action ->
  case action
  | UpdatePassword(p) => (p, model[1], calculateStrength(p, model[1]))
  | ClearCriteria => (model[0], [], Weak)
  | AddCriterion(c) => (model[0], c :: model[1], calculateStrength(model[0], c :: model[1]))
  | RemoveCriterion(c) => 
      let newCriteria = List.filter((fun crit -> crit != c), model[1]) in
      (model[0], newCriteria, calculateStrength(model[0], newCriteria))
  end