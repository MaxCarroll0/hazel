The following static errors were discovered:
Error in term:
  thd
Nature of error: Variable thd is not bound
Error in term:
  fillRow
Nature of error: Variable fillRow is not bound
Error in term:
  updateCell
Nature of error: Variable updateCell is not bound
Error in term:
  initGrid
Nature of error: Variable initGrid is not bound
Error in term:
  thd
Nature of error: Variable thd is not bound
Error in term:
  fun (model, action) ->
 case action
 | SelectEmoji(emoji) => (fst(model), emoji, thd(model))
| StampEmoji(((row, col))) => let newGrid = updateCell(row, col, snd(model), fst(model)) in
 (newGrid, snd(model), thd(model))
| ClearCell(((row, col))) => let newGrid = updateCell(row, col, , fst(model)) in
 (newGrid, snd(model), thd(model))
| ClearGrid => (initGrid(()), snd(model), thd(model))
| FillRow(row) => let newGrid = fillRow(row, snd(model), fst(model)) in
 (newGrid, snd(model), thd(model))
end where updateCell fun (row, col, emoji, grid) ->
 List.mapi(fun (i, row) ->
 if i == row then List.mapi(fun (j, _) ->
 if j == col then emoji else cell, row) else row, grid), fillRow fun (row, emoji, grid) ->
 List.mapi(fun (i, row) ->
 if i == row then List.map(fun _ ->
 emoji, row) else row, grid)
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  thd
Nature of error: Variable thd is not bound
Error in term:
  updateCell fun (row, col, emoji, grid) ->
 List.mapi(fun (i, row) ->
 if i == row then List.mapi(fun (j, _) ->
 if j == col then emoji else cell, row) else row, grid)
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  fillRow
Nature of error: Variable fillRow is not bound
Error in term:
  thd
Nature of error: Variable thd is not bound
Error in term:
  updateCell
Nature of error: Variable updateCell is not bound
Error in term:
  cell
Nature of error: Variable cell is not bound
Error in term:
  where
Nature of error: Variable where is not bound
Error in term:
  fillRow fun (row, emoji, grid) ->
 List.mapi(fun (i, row) ->
 if i == row then List.map(fun _ ->
 emoji, row) else row, grid)
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  thd
Nature of error: Variable thd is not bound
Error in term:
  where updateCell fun (row, col, emoji, grid) ->
 List.mapi(fun (i, row) ->
 if i == row then List.mapi(fun (j, _) ->
 if j == col then emoji else cell, row) else row, grid), fillRow fun (row, emoji, grid) ->
 List.mapi(fun (i, row) ->
 if i == row then List.map(fun _ ->
 emoji, row) else row, grid)
Nature of error: Incomplete syntax (possible cause: remember that function application is c-style and requires parentheses around the argument)
Error in term:
  updateCell
Nature of error: Variable updateCell is not bound
Please try to address the error(s) by updating your previous code suggestion
Please respond ONLY with the update suggestion