
fun (playlist, action) ->
  case action
  | PlaySong(id) => (get_songs(playlist), Playing(id))
  | PauseCurrentSong => (get_songs(playlist), case get_state(playlist)
    | NoSongSelected => NoSongSelected
    | PausedOn(_) => get_state(playlist)
    | Playing(id) => PausedOn(id)
    end)
  | RemoveSong(id) => (List.filter(fun song_id -> song_id != id, get_songs(playlist)), get_state(playlist))
  | AddSong(id) => (id :: get_songs(playlist), get_state(playlist))
  end