fun (playlist, action) ->
  case action
  | PlaySong(id) => (get_songs(playlist), Playing(id))
  | PauseCurrentSong => 
      case get_state(playlist) of 
      | Playing(id) => (get_songs(playlist), PausedOn(id))
      | other => (get_songs(playlist), other)
      end
  | RemoveSong(id) => 
      let songs = List.filter(fun song_id -> song_id != id, get_songs(playlist)) in
      (songs, get_state(playlist))
  | AddSong(id) => (List.append(get_songs(playlist), [id]), get_state(playlist))
  end