fun pl, action ->
  case action
  | PlaySong(id) => (get_songs(pl), Playing(id))
  | PauseCurrentSong =>
      let play_list_state =
        case get_state(pl)
        | Playing(id) => PausedOn(id)
        | _ => NoSongSelected
        end in
      (get_songs(pl), play_list_state)
  | RemoveSong(id) =>
      let songs = List.filter(fun song_id -> song_id != id, get_songs(pl)) in
      (songs, get_state(pl))
  | AddSong(id) => (id::get_songs(pl), get_state(pl))
  end