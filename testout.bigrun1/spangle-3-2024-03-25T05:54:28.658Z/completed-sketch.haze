# Update Playlist app model based on an action #

let update: (PlayList, PlayListAction) -> PlayList =
  
fun playlist, action ->
  let (song_list, state) = playlist in
  case action
  | PlaySong(id) => (song_list, Playing(id))
  | PauseCurrentSong => (song_list, match state with
                                        | Playing(id) => PausedOn(id)
                                        | _ => state end)
  | RemoveSong(id) => (List.filter((fun x -> x != id), song_list), state)
  | AddSong(id) => (song_list @ [id], state)
  end
in