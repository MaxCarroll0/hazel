fun model, action ->
  case action
  | AddBooking(user, day, time) =>
    let new_booking_id = List.length(getBookings(model)) + 1 in
    let new_booking = ((day, time), user, new_booking_id) in
    let new_bookings = new_booking :: getBookings(model) in
    (initFormState, new_bookings, new_booking_id)
  | CancelBooking(user, booking_id) =>
    let old_bookings = getUserBookings(model, user) in
    let new_bookings = rm_booking(user, booking_id, old_bookings) in
    (model.0, new_bookings, model.2)
  | ClearBookings =>
    (initFormState, [], 0)
  end
in update(model, action)