
fun model, action -> 
    case action 
    | Login(user) => 
        let bookings = getUserBookings(model, user) in
        let numOfBookings = List.length(bookings) in
        model {loggedIn = Some(user), bookings = numOfBookings}
        
    | Logout => model {loggedIn = None}
        
    | Book((weekday, timeOfDay), room) =>
        match model.loggedIn with
        | Some(user) =>
            let bookingId = string_length(user.name) + numOfBookings(model.bookings) in 
            if bookingId == 0 then
                model {bookings = getBookings(model)}
            else
                let newBookings = Booking(user, bookingId,
                [{weekday = weekday; timeOfDay = timeOfDay, room = room}])
                in model {bookings = rm_booking(user, bookingId, newBookings)}
        | None => model
    end