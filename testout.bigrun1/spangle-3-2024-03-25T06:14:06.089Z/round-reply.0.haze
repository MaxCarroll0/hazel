fun (model, action) ->
case action
| AddBooking((user, weekday, time_of_day)) =>
  let (booking_form_data, bookings, last_booking_id) = model in
  let new_booking_id = last_booking_id + 1 in
  let new_booking = ((weekday, time_of_day), user, new_booking_id) in
  (booking_form_data, new_booking::bookings, new_booking_id)
| CancelBooking((user, booking_id)) =>
  let (booking_form_data, bookings, _) = model in
  let new_bookings = List.filter((fun (_, user', booking_id') -> !(user' == user && booking_id' == booking_id)), bookings) in
  (booking_form_data, new_bookings, booking_id)
| ClearBookings => 
  let (booking_form_data, _, booking_id) = model in
  (booking_form_data, [], booking_id)    
end