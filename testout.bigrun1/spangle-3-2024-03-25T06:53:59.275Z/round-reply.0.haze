fun (model, action) -> 
  case action
  | UpdatePassword(password) => meet_criteria(password, model._2)
  | ClearCriteria => clear_criteria(model._2)
  | AddCriterion(criterion) => add_criterion(criterion, model._2)
  | RemoveCriterion(criterion) => remove_criterion(criterion, model._2)
  end
where

add_criterion = fun (criterion, criteria) ->
  criterion::criteria,

remove_criterion = fun (criterion, criteria) ->
  List.filter(fun c -> c != criterion, criteria),

clear_criteria = fun _->
  [],

meet_criteria = fun (password, criteria) ->
  let strength = check_strength(password, criteria) in
  (password, criteria, strength),

check_strength = fun (password, criteria) ->
  if List.for_all(fun criterion -> meet_criterion(password, criterion), criteria) then
    Strong
  else if List.exists(fun criterion -> meet_criterion(password, criterion), criteria) then
    Moderate
  else
    Weak
end.