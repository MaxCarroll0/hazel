# Update the EmojiPaint app model based on an action #

let update: (Model, Action) -> Model =
  fun model, action ->
    case action
    | SelectEmoji(emoji) =>
        let (grid, _, palette) = model in
        (grid, emoji, palette)
    | StampEmoji((row, col)) =>
        let (grid, emoji, palette) = model in
        let newGrid = if row < List.length(grid) then
                        let rowContents = List.nth(grid, row) in
                        if col < List.length(rowContents) then
                            List.update(rowContents, col, emoji)
                        else
                            rowContents
                      else
                        grid
        in
        (newGrid, emoji, palette)
    | ClearCell((row, col)) =>
        let (grid, emoji, palette) = model in
        let newGrid = if row < List.length(grid) then
                        let rowContents = List.nth(grid, row) in
                        if col < List.length(rowContents) then
                            List.update(rowContents, col, " ")
                        else
                            rowContents
                      else
                        grid
        in
        (newGrid, emoji, palette)
    | ClearGrid =>
        let (_, emoji, palette) = model in
        (List.map(fun _ -> " ", grid), emoji, palette)
    | FillRow(row) =>
        let (grid, emoji, palette) = model in
        let newGrid = if row < List.length(grid) then
                        List.update(grid, row, List.map(fun _ -> emoji, List.nth(grid, row)))
                      else
                        grid
        in
        (newGrid, emoji, palette)
    end
in
